#
# SPDX-FileCopyrightText: Copyright (c) 2021-2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

try:
    import sionna as sn
except ImportError as e:
    import sys
    sys.path.append("../")
    import sionna as sn

import unittest
import numpy as np
import tensorflow as tf
from sionna.channel import utils
from sionna.channel.optical import fiber
from sionna.channel.optical import edfa

gpus = tf.config.list_physical_devices('GPU')
print('Number of GPUs available :', len(gpus))
if gpus:
    GPU_NUM = 0  # Number of the GPU to be used
    try:
        tf.config.set_visible_devices(gpus[GPU_NUM], 'GPU')
        print('Only GPU number', GPU_NUM, 'used.')
        tf.config.experimental.set_memory_growth(gpus[GPU_NUM], True)
    except RuntimeError as e:
        print(e)


class TestOptical(unittest.TestCase):
    def setUp(self):
        self._u_ref = np.asarray(
            "4.7173e-08,4.4381e-08,3.8966e-08,3.1258e-08,2.174e-08,1.1112e-08,3.435e-09,1.2823e-08,2.3379e-08,3.2709e-08,4.0165e-08,4.5286e-08,4.7768e-08,4.7472e-08,4.4436e-08,3.888e-08,3.1224e-08,2.2178e-08,1.3321e-08,1.0368e-08,1.7341e-08,2.6729e-08,3.5422e-08,4.2403e-08,4.7121e-08,4.9256e-08,4.8689e-08,4.5498e-08,3.9978e-08,3.27e-08,2.4708e-08,1.8249e-08,1.749e-08,2.3231e-08,3.137e-08,3.924e-08,4.5625e-08,4.988e-08,5.1662e-08,5.0867e-08,4.7624e-08,4.2319e-08,3.5683e-08,2.9021e-08,2.4584e-08,2.4933e-08,2.994e-08,3.7027e-08,4.4061e-08,4.9811e-08,5.3587e-08,5.5033e-08,5.407e-08,5.0879e-08,4.5938e-08,4.0108e-08,3.4775e-08,3.1848e-08,3.2834e-08,3.7348e-08,4.3587e-08,4.9847e-08,5.4978e-08,5.8291e-08,5.9441e-08,5.8377e-08,5.5335e-08,5.0867e-08,4.59e-08,4.1762e-08,3.9947e-08,4.1339e-08,4.5491e-08,5.1049e-08,5.6623e-08,6.1181e-08,6.4073e-08,6.4979e-08,6.3884e-08,6.1071e-08,5.7143e-08,5.3029e-08,4.9915e-08,4.8938e-08,5.0607e-08,5.4481e-08,5.9483e-08,6.4465e-08,6.8516e-08,7.1043e-08,7.1765e-08,7.0705e-08,6.8185e-08,6.4827e-08,6.1515e-08,5.9269e-08,5.8939e-08,6.0812e-08,6.4466e-08,6.9015e-08,7.3495e-08,7.711e-08,7.9336e-08,7.9937e-08,7.8974e-08,7.6793e-08,7.4009e-08,7.1435e-08,6.9926e-08,7.0114e-08,7.2147e-08,7.5627e-08,7.9808e-08,8.387e-08,8.7125e-08,8.9117e-08,8.9661e-08,8.8848e-08,8.7037e-08,8.4818e-08,8.2916e-08,8.2041e-08,8.2658e-08,8.4825e-08,8.8172e-08,9.2058e-08,9.5782e-08,9.8752e-08,1.0058e-07,1.0113e-07,1.0051e-07,9.9093e-08,9.742e-08,9.6133e-08,9.581e-08,9.6796e-08,9.9087e-08,1.0234e-07,1.06e-07,1.0946e-07,1.1222e-07,1.1395e-07,1.1456e-07,1.1418e-07,1.1317e-07,1.1202e-07,1.113e-07,1.1147e-07,1.1279e-07,1.152e-07,1.184e-07,1.2189e-07,1.2517e-07,1.2779e-07,1.2949e-07,1.3021e-07,1.3011e-07,1.2951e-07,1.2888e-07,1.2869e-07,1.2931e-07,1.3093e-07,1.3348e-07,1.3666e-07,1.4005e-07,1.4321e-07,1.4576e-07,1.4749e-07,1.4838e-07,1.4859e-07,1.4842e-07,1.4829e-07,1.486e-07,1.4965e-07,1.5156e-07,1.5426e-07,1.5747e-07,1.6082e-07,1.6393e-07,1.6648e-07,1.6831e-07,1.6942e-07,1.6996e-07,1.7024e-07,1.706e-07,1.7139e-07,1.7285e-07,1.7507e-07,1.7795e-07,1.8123e-07,1.846e-07,1.8772e-07,1.9034e-07,1.9233e-07,1.9371e-07,1.9463e-07,1.9536e-07,1.9622e-07,1.9749e-07,1.9936e-07,2.0189e-07,2.0498e-07,2.0839e-07,2.1184e-07,2.1505e-07,2.1781e-07,2.2002e-07,2.2171e-07,2.2304e-07,2.2425e-07,2.2561e-07,2.2737e-07,2.2967e-07,2.3253e-07,2.3586e-07,2.3945e-07,2.4305e-07,2.4642e-07,2.4939e-07,2.5188e-07,2.5395e-07,2.5573e-07,2.5744e-07,2.5933e-07,2.6158e-07,2.6432e-07,2.6756e-07,2.7119e-07,2.7502e-07,2.7884e-07,2.8244e-07,2.8569e-07,2.8853e-07,2.9102e-07,2.9329e-07,2.9555e-07,2.9798e-07,3.0077e-07,3.0399e-07,3.0763e-07,3.1161e-07,3.1575e-07,3.1986e-07,3.2378e-07,3.2738e-07,3.3064e-07,3.3362e-07,3.3644e-07,3.3927e-07,3.423e-07,3.4565e-07,3.4939e-07,3.535e-07,3.5789e-07,3.6241e-07,3.669e-07,3.7121e-07,3.7525e-07,3.7901e-07,3.8254e-07,3.8596e-07,3.8943e-07,3.9309e-07,3.9706e-07,4.0137e-07,4.0601e-07,4.109e-07,4.1588e-07,4.2083e-07,4.2562e-07,4.3019e-07,4.3452e-07,4.3868e-07,4.4278e-07,4.4694e-07,4.513e-07,4.5595e-07,4.6091e-07,4.6616e-07,4.7161e-07,4.7715e-07,4.8266e-07,4.8803e-07,4.9322e-07,4.9822e-07,5.031e-07,5.0794e-07,5.1288e-07,5.1801e-07,5.2341e-07,5.291e-07,5.3504e-07,5.4117e-07,5.4737e-07,5.5354e-07,5.596e-07,5.6551e-07,5.7128e-07,5.7697e-07,5.8266e-07,5.8846e-07,5.9445e-07,6.007e-07,6.0721e-07,6.1395e-07,6.2085e-07,6.2783e-07,6.3478e-07,6.4165e-07,6.4841e-07,6.5506e-07,6.6167e-07,6.6832e-07,6.7508e-07,6.8204e-07,6.8924e-07,6.9669e-07,7.0434e-07,7.1215e-07,7.2003e-07,7.279e-07,7.3571e-07,7.4344e-07,7.5111e-07,7.5877e-07,7.6649e-07,7.7434e-07,7.8239e-07,7.9067e-07,7.9918e-07,8.0789e-07,8.1675e-07,8.2567e-07,8.3461e-07,8.4351e-07,8.5237e-07,8.612e-07,8.7005e-07,8.7898e-07,8.8806e-07,8.9734e-07,9.0685e-07,9.1659e-07,9.2651e-07,9.3657e-07,9.4671e-07,9.5688e-07,9.6705e-07,9.772e-07,9.8735e-07,9.9756e-07,1.0079e-06,1.0183e-06,1.029e-06,1.0399e-06,1.0511e-06,1.0624e-06,1.0738e-06,1.0854e-06,1.097e-06,1.1086e-06,1.1202e-06,1.1319e-06,1.1436e-06,1.1555e-06,1.1676e-06,1.1799e-06,1.1924e-06,1.2051e-06,1.218e-06,1.231e-06,1.2442e-06,1.2574e-06,1.2707e-06,1.2841e-06,1.2975e-06,1.311e-06,1.3247e-06,1.3385e-06,1.3526e-06,1.3669e-06,1.3815e-06,1.3962e-06,1.4111e-06,1.4261e-06,1.4412e-06,1.4564e-06,1.4717e-06,1.4871e-06,1.5026e-06,1.5184e-06,1.5343e-06,1.5504e-06,1.5668e-06,1.5834e-06,1.6003e-06,1.6173e-06,1.6344e-06,1.6517e-06,1.6691e-06,1.6866e-06,1.7043e-06,1.7221e-06,1.7401e-06,1.7584e-06,1.7769e-06,1.7957e-06,1.8147e-06,1.8339e-06,1.8534e-06,1.873e-06,1.8927e-06,1.9127e-06,1.9327e-06,1.953e-06,1.9734e-06,1.9941e-06,2.015e-06,2.0362e-06,2.0577e-06,2.0794e-06,2.1014e-06,2.1236e-06,2.1461e-06,2.1687e-06,2.1915e-06,2.2144e-06,2.2376e-06,2.2611e-06,2.2848e-06,2.3088e-06,2.333e-06,2.3576e-06,2.3825e-06,2.4076e-06,2.433e-06,2.4587e-06,2.4845e-06,2.5106e-06,2.5369e-06,2.5635e-06,2.5903e-06,2.6175e-06,2.645e-06,2.6727e-06,2.7009e-06,2.7293e-06,2.758e-06,2.7871e-06,2.8164e-06,2.846e-06,2.8758e-06,2.906e-06,2.9364e-06,2.9671e-06,2.9982e-06,3.0297e-06,3.0615e-06,3.0936e-06,3.1262e-06,3.159e-06,3.1922e-06,3.2258e-06,3.2596e-06,3.2938e-06,3.3282e-06,3.3631e-06,3.3983e-06,3.4339e-06,3.4698e-06,3.5062e-06,3.543e-06,3.5802e-06,3.6178e-06,3.6557e-06,3.6941e-06,3.7328e-06,3.7719e-06,3.8113e-06,3.8512e-06,3.8915e-06,3.9322e-06,3.9734e-06,4.015e-06,4.057e-06,4.0996e-06,4.1425e-06,4.1859e-06,4.2298e-06,4.274e-06,4.3187e-06,4.3639e-06,4.4095e-06,4.4556e-06,4.5021e-06,4.5492e-06,4.5968e-06,4.6449e-06,4.6935e-06,4.7426e-06,4.7923e-06,4.8424e-06,4.893e-06,4.9441e-06,4.9957e-06,5.0479e-06,5.1006e-06,5.1538e-06,5.2077e-06,5.2621e-06,5.3171e-06,5.3727e-06,5.4288e-06,5.4855e-06,5.5428e-06,5.6006e-06,5.6591e-06,5.7181e-06,5.7777e-06,5.838e-06,5.8989e-06,5.9604e-06,6.0226e-06,6.0855e-06,6.149e-06,6.2131e-06,6.2779e-06,6.3434e-06,6.4095e-06,6.4763e-06,6.5438e-06,6.6119e-06,6.6808e-06,6.7504e-06,6.8208e-06,6.8918e-06,6.9636e-06,7.0362e-06,7.1095e-06,7.1835e-06,7.2583e-06,7.3339e-06,7.4102e-06,7.4873e-06,7.5652e-06,7.6439e-06,7.7234e-06,7.8038e-06,7.885e-06,7.967e-06,8.0499e-06,8.1336e-06,8.2182e-06,8.3036e-06,8.3899e-06,8.4771e-06,8.5652e-06,8.6542e-06,8.7441e-06,8.8349e-06,8.9267e-06,9.0194e-06,9.1131e-06,9.2078e-06,9.3034e-06,9.4e-06,9.4976e-06,9.5961e-06,9.6957e-06,9.7963e-06,9.8979e-06,1.0001e-05,1.0104e-05,1.0209e-05,1.0315e-05,1.0422e-05,1.053e-05,1.0639e-05,1.0749e-05,1.0861e-05,1.0973e-05,1.1087e-05,1.1202e-05,1.1318e-05,1.1435e-05,1.1553e-05,1.1673e-05,1.1794e-05,1.1916e-05,1.2039e-05,1.2164e-05,1.229e-05,1.2417e-05,1.2545e-05,1.2675e-05,1.2806e-05,1.2939e-05,1.3072e-05,1.3208e-05,1.3344e-05,1.3482e-05,1.3621e-05,1.3762e-05,1.3904e-05,1.4048e-05,1.4193e-05,1.4339e-05,1.4487e-05,1.4637e-05,1.4788e-05,1.4941e-05,1.5095e-05,1.525e-05,1.5408e-05,1.5567e-05,1.5727e-05,1.5889e-05,1.6053e-05,1.6219e-05,1.6386e-05,1.6555e-05,1.6725e-05,1.6897e-05,1.7071e-05,1.7247e-05,1.7425e-05,1.7604e-05,1.7785e-05,1.7969e-05,1.8153e-05,1.834e-05,1.8529e-05,1.8719e-05,1.8912e-05,1.9106e-05,1.9303e-05,1.9501e-05,1.9702e-05,1.9904e-05,2.0109e-05,2.0315e-05,2.0524e-05,2.0734e-05,2.0947e-05,2.1162e-05,2.138e-05,2.1599e-05,2.1821e-05,2.2044e-05,2.227e-05,2.2499e-05,2.273e-05,2.2963e-05,2.3198e-05,2.3436e-05,2.3676e-05,2.3918e-05,2.4163e-05,2.4411e-05,2.4661e-05,2.4913e-05,2.5168e-05,2.5426e-05,2.5686e-05,2.5949e-05,2.6214e-05,2.6482e-05,2.6753e-05,2.7026e-05,2.7303e-05,2.7582e-05,2.7864e-05,2.8148e-05,2.8436e-05,2.8726e-05,2.9019e-05,2.9316e-05,2.9615e-05,2.9917e-05,3.0222e-05,3.053e-05,3.0842e-05,3.1156e-05,3.1474e-05,3.1795e-05,3.2119e-05,3.2446e-05,3.2777e-05,3.311e-05,3.3448e-05,3.3788e-05,3.4132e-05,3.4479e-05,3.483e-05,3.5185e-05,3.5542e-05,3.5904e-05,3.6269e-05,3.6638e-05,3.701e-05,3.7386e-05,3.7766e-05,3.8149e-05,3.8537e-05,3.8928e-05,3.9323e-05,3.9722e-05,4.0125e-05,4.0532e-05,4.0944e-05,4.1359e-05,4.1778e-05,4.2202e-05,4.2629e-05,4.3061e-05,4.3497e-05,4.3938e-05,4.4383e-05,4.4832e-05,4.5286e-05,4.5744e-05,4.6207e-05,4.6674e-05,4.7146e-05,4.7623e-05,4.8105e-05,4.8591e-05,4.9082e-05,4.9577e-05,5.0078e-05,5.0584e-05,5.1095e-05,5.161e-05,5.2131e-05,5.2657e-05,5.3188e-05,5.3725e-05,5.4266e-05,5.4813e-05,5.5366e-05,5.5923e-05,5.6487e-05,5.7056e-05,5.763e-05,5.821e-05,5.8796e-05,5.9388e-05,5.9985e-05,6.0588e-05,6.1197e-05,6.1813e-05,6.2434e-05,6.3061e-05,6.3695e-05,6.4334e-05,6.498e-05,6.5633e-05,6.6291e-05,6.6956e-05,6.7628e-05,6.8306e-05,6.8991e-05,6.9683e-05,7.0381e-05,7.1086e-05,7.1798e-05,7.2517e-05,7.3243e-05,7.3977e-05,7.4717e-05,7.5464e-05,7.6219e-05,7.6981e-05,7.7751e-05,7.8528e-05,7.9313e-05,8.0105e-05,8.0905e-05,8.1713e-05,8.2529e-05,8.3352e-05,8.4184e-05,8.5024e-05,8.5872e-05,8.6728e-05,8.7592e-05,8.8465e-05,8.9346e-05,9.0236e-05,9.1135e-05,9.2042e-05,9.2958e-05,9.3883e-05,9.4817e-05,9.576e-05,9.6712e-05,9.7673e-05,9.8644e-05,9.9624e-05,0.00010061,0.00010161,0.00010262,0.00010364,0.00010467,0.00010571,0.00010675,0.00010781,0.00010888,0.00010996,0.00011105,0.00011215,0.00011326,0.00011438,0.00011551,0.00011665,0.00011781,0.00011897,0.00012015,0.00012133,0.00012253,0.00012374,0.00012496,0.0001262,0.00012744,0.0001287,0.00012997,0.00013125,0.00013254,0.00013385,0.00013517,0.0001365,0.00013784,0.0001392,0.00014057,0.00014195,0.00014335,0.00014476,0.00014618,0.00014762,0.00014907,0.00015053,0.00015201,0.0001535,0.00015501,0.00015653,0.00015806,0.00015961,0.00016118,0.00016276,0.00016435,0.00016596,0.00016758,0.00016922,0.00017088,0.00017255,0.00017424,0.00017594,0.00017766,0.0001794,0.00018115,0.00018292,0.0001847,0.0001865,0.00018832,0.00019016,0.00019201,0.00019388,0.00019577,0.00019768,0.0001996,0.00020155,0.00020351,0.00020549,0.00020749,0.0002095,0.00021154,0.00021359,0.00021567,0.00021776,0.00021988,0.00022201,0.00022416,0.00022634,0.00022853,0.00023075,0.00023298,0.00023524,0.00023752,0.00023982,0.00024214,0.00024448,0.00024684,0.00024923,0.00025164,0.00025407,0.00025652,0.000259,0.0002615,0.00026402,0.00026657,0.00026914,0.00027174,0.00027435,0.000277,0.00027967,0.00028236,0.00028508,0.00028782,0.00029059,0.00029338,0.0002962,0.00029905,0.00030192,0.00030482,0.00030775,0.0003107,0.00031368,0.00031669,0.00031972,0.00032279,0.00032588,0.000329,0.00033215,0.00033533,0.00033854,0.00034178,0.00034505,0.00034835,0.00035167,0.00035503,0.00035842,0.00036185,0.0003653,0.00036878,0.0003723,0.00037585,0.00037943,0.00038305,0.0003867,0.00039038,0.00039409,0.00039784,0.00040163,0.00040545,0.0004093,0.00041319,0.00041712,0.00042108,0.00042507,0.00042911,0.00043318,0.00043729,0.00044143,0.00044562,0.00044984,0.0004541,0.0004584,0.00046274,0.00046712,0.00047153,0.00047599,0.00048049,0.00048503,0.00048961,0.00049424,0.0004989,0.00050361,0.00050836,0.00051315,0.00051799,0.00052287,0.0005278,0.00053277,0.00053778,0.00054284,0.00054795,0.0005531,0.0005583,0.00056355,0.00056884,0.00057419,0.00057958,0.00058502,0.00059051,0.00059605,0.00060163,0.00060727,0.00061296,0.0006187,0.0006245,0.00063034,0.00063624,0.00064219,0.0006482,0.00065426,0.00066037,0.00066654,0.00067277,0.00067905,0.00068538,0.00069178,0.00069823,0.00070474,0.00071131,0.00071793,0.00072462,0.00073137,0.00073818,0.00074504,0.00075197,0.00075897,0.00076602,0.00077314,0.00078032,0.00078757,0.00079488,0.00080226,0.0008097,0.00081721,0.00082478,0.00083243,0.00084014,0.00084792,0.00085577,0.00086369,0.00087169,0.00087975,0.00088788,0.00089609,0.00090437,0.00091273,0.00092116,0.00092966,0.00093824,0.0009469,0.00095563,0.00096444,0.00097333,0.0009823,0.00099135,0.0010005,0.0010097,0.001019,0.0010284,0.0010378,0.0010474,0.001057,0.0010667,0.0010765,0.0010864,0.0010964,0.0011064,0.0011166,0.0011268,0.0011372,0.0011476,0.0011581,0.0011687,0.0011794,0.0011902,0.0012011,0.0012121,0.0012232,0.0012344,0.0012456,0.001257,0.0012685,0.0012801,0.0012918,0.0013036,0.0013155,0.0013275,0.0013396,0.0013518,0.0013641,0.0013766,0.0013891,0.0014018,0.0014145,0.0014274,0.0014404,0.0014535,0.0014667,0.0014801,0.0014935,0.0015071,0.0015208,0.0015346,0.0015486,0.0015626,0.0015768,0.0015911,0.0016055,0.0016201,0.0016348,0.0016496,0.0016646,0.0016797,0.0016949,0.0017102,0.0017257,0.0017413,0.0017571,0.001773,0.001789,0.0018052,0.0018215,0.001838,0.0018546,0.0018714,0.0018883,0.0019053,0.0019225,0.0019399,0.0019574,0.0019751,0.0019929,0.0020109,0.002029,0.0020473,0.0020658,0.0020844,0.0021032,0.0021221,0.0021412,0.0021605,0.00218,0.0021996,0.0022194,0.0022394,0.0022595,0.0022798,0.0023003,0.002321,0.0023419,0.002363,0.0023842,0.0024056,0.0024272,0.002449,0.002471,0.0024932,0.0025156,0.0025382,0.002561,0.002584,0.0026071,0.0026305,0.0026541,0.0026779,0.002702,0.0027262,0.0027506,0.0027753,0.0028002,0.0028253,0.0028506,0.0028761,0.0029019,0.0029279,0.0029541,0.0029805,0.0030072,0.0030342,0.0030613,0.0030887,0.0031164,0.0031443,0.0031724,0.0032008,0.0032294,0.0032583,0.0032875,0.0033169,0.0033465,0.0033765,0.0034066,0.0034371,0.0034678,0.0034988,0.0035301,0.0035617,0.0035935,0.0036256,0.003658,0.0036907,0.0037237,0.003757,0.0037905,0.0038244,0.0038586,0.003893,0.0039278,0.0039629,0.0039983,0.004034,0.00407,0.0041064,0.004143,0.00418,0.0042174,0.004255,0.004293,0.0043314,0.00437,0.0044091,0.0044484,0.0044881,0.0045282,0.0045686,0.0046094,0.0046506,0.0046921,0.004734,0.0047763,0.0048189,0.0048619,0.0049053,0.0049491,0.0049933,0.0050379,0.0050829,0.0051282,0.005174,0.0052202,0.0052668,0.0053139,0.0053613,0.0054092,0.0054575,0.0055062,0.0055554,0.005605,0.005655,0.0057055,0.0057565,0.0058079,0.0058598,0.0059121,0.0059649,0.0060182,0.0060719,0.0061262,0.0061809,0.0062361,0.0062918,0.006348,0.0064047,0.006462,0.0065197,0.0065779,0.0066367,0.006696,0.0067559,0.0068162,0.0068771,0.0069386,0.0070006,0.0070632,0.0071263,0.00719,0.0072543,0.0073191,0.0073846,0.0074506,0.0075172,0.0075844,0.0076522,0.0077207,0.0077897,0.0078594,0.0079296,0.0080006,0.0080721,0.0081443,0.0082172,0.0082907,0.0083648,0.0084397,0.0085152,0.0085913,0.0086682,0.0087457,0.008824,0.0089029,0.0089826,0.009063,0.0091441,0.0092259,0.0093085,0.0093918,0.0094758,0.0095606,0.0096462,0.0097325,0.0098196,0.0099075,0.0099961,0.010086,0.010176,0.010267,0.010359,0.010452,0.010545,0.010639,0.010735,0.010831,0.010928,0.011025,0.011124,0.011224,0.011324,0.011426,0.011528,0.011631,0.011735,0.01184,0.011946,0.012053,0.012161,0.012269,0.012379,0.01249,0.012602,0.012714,0.012828,0.012943,0.013058,0.013175,0.013293,0.013412,0.013532,0.013653,0.013775,0.013898,0.014022,0.014147,0.014274,0.014401,0.01453,0.01466,0.01479,0.014922,0.015056,0.01519,0.015326,0.015462,0.0156,0.015739,0.01588,0.016021,0.016164,0.016308,0.016453,0.0166,0.016748,0.016897,0.017047,0.017199,0.017352,0.017507,0.017662,0.017819,0.017978,0.018138,0.018299,0.018461,0.018625,0.018791,0.018957,0.019125,0.019295,0.019466,0.019639,0.019813,0.019988,0.020165,0.020344,0.020524,0.020705,0.020888,0.021073,0.021259,0.021447,0.021636,0.021827,0.02202,0.022214,0.02241,0.022607,0.022806,0.023007,0.023209,0.023413,0.023619,0.023826,0.024036,0.024246,0.024459,0.024673,0.02489,0.025108,0.025327,0.025549,0.025772,0.025997,0.026224,0.026453,0.026684,0.026916,0.027151,0.027387,0.027626,0.027866,0.028108,0.028352,0.028598,0.028846,0.029096,0.029348,0.029602,0.029857,0.030115,0.030375,0.030637,0.030901,0.031168,0.031436,0.031706,0.031979,0.032253,0.03253,0.032809,0.03309,0.033373,0.033658,0.033946,0.034235,0.034527,0.034822,0.035118,0.035417,0.035717,0.036021,0.036326,0.036634,0.036944,0.037256,0.037571,0.037888,0.038207,0.038529,0.038853,0.039179,0.039508,0.03984,0.040173,0.040509,0.040848,0.041189,0.041532,0.041878,0.042227,0.042577,0.042931,0.043287,0.043645,0.044006,0.044369,0.044735,0.045104,0.045475,0.045849,0.046225,0.046604,0.046986,0.04737,0.047756,0.048146,0.048538,0.048932,0.04933,0.04973,0.050132,0.050538,0.050946,0.051356,0.05177,0.052186,0.052605,0.053027,0.053451,0.053878,0.054308,0.05474,0.055176,0.055614,0.056055,0.056499,0.056945,0.057394,0.057846,0.058301,0.058759,0.05922,0.059683,0.060149,0.060618,0.06109,0.061565,0.062043,0.062523,0.063006,0.063492,0.063981,0.064473,0.064968,0.065466,0.065966,0.06647,0.066976,0.067485,0.067997,0.068512,0.06903,0.069551,0.070074,0.070601,0.07113,0.071662,0.072198,0.072736,0.073277,0.073821,0.074367,0.074917,0.07547,0.076025,0.076583,0.077145,0.077709,0.078276,0.078846,0.079419,0.079994,0.080573,0.081154,0.081738,0.082325,0.082915,0.083508,0.084104,0.084702,0.085304,0.085908,0.086515,0.087125,0.087737,0.088353,0.088971,0.089592,0.090216,0.090843,0.091472,0.092104,0.092739,0.093377,0.094017,0.09466,0.095306,0.095955,0.096606,0.09726,0.097917,0.098576,0.099238,0.099902,0.10057,0.10124,0.10191,0.10259,0.10326,0.10394,0.10463,0.10531,0.106,0.10669,0.10738,0.10808,0.10878,0.10948,0.11018,0.11089,0.11159,0.1123,0.11302,0.11373,0.11445,0.11517,0.11589,0.11661,0.11734,0.11807,0.1188,0.11953,0.12027,0.121,0.12174,0.12248,0.12323,0.12397,0.12472,0.12547,0.12622,0.12698,0.12773,0.12849,0.12925,0.13001,0.13078,0.13154,0.13231,0.13308,0.13385,0.13462,0.1354,0.13618,0.13695,0.13773,0.13852,0.1393,0.14008,0.14087,0.14166,0.14245,0.14324,0.14403,0.14483,0.14562,0.14642,0.14722,0.14802,0.14882,0.14962,0.15043,0.15123,0.15204,0.15285,0.15365,0.15446,0.15528,0.15609,0.1569,0.15772,0.15853,0.15935,0.16016,0.16098,0.1618,0.16262,0.16344,0.16427,0.16509,0.16591,0.16674,0.16756,0.16839,0.16921,0.17004,0.17087,0.17169,0.17252,0.17335,0.17418,0.17501,0.17584,0.17667,0.1775,0.17833,0.17917,0.18,0.18083,0.18166,0.1825,0.18333,0.18416,0.18499,0.18583,0.18666,0.18749,0.18833,0.18916,0.18999,0.19083,0.19166,0.19249,0.19333,0.19416,0.19499,0.19582,0.19665,0.19748,0.19832,0.19915,0.19998,0.20081,0.20164,0.20246,0.20329,0.20412,0.20495,0.20577,0.2066,0.20742,0.20825,0.20907,0.2099,0.21072,0.21154,0.21236,0.21318,0.214,0.21482,0.21564,0.21645,0.21727,0.21808,0.21889,0.21971,0.22052,0.22133,0.22214,0.22294,0.22375,0.22456,0.22536,0.22616,0.22697,0.22777,0.22857,0.22936,0.23016,0.23095,0.23175,0.23254,0.23333,0.23412,0.23491,0.23569,0.23648,0.23726,0.23804,0.23882,0.2396,0.24038,0.24115,0.24193,0.2427,0.24347,0.24424,0.245,0.24577,0.24653,0.24729,0.24805,0.24881,0.24957,0.25032,0.25107,0.25182,0.25257,0.25332,0.25406,0.2548,0.25554,0.25628,0.25702,0.25775,0.25848,0.25921,0.25994,0.26066,0.26139,0.26211,0.26283,0.26354,0.26426,0.26497,0.26568,0.26639,0.26709,0.2678,0.2685,0.2692,0.26989,0.27059,0.27128,0.27197,0.27266,0.27334,0.27402,0.2747,0.27538,0.27606,0.27673,0.2774,0.27807,0.27873,0.2794,0.28006,0.28072,0.28137,0.28203,0.28268,0.28332,0.28397,0.28461,0.28525,0.28589,0.28653,0.28716,0.28779,0.28842,0.28904,0.28966,0.29028,0.2909,0.29152,0.29213,0.29274,0.29334,0.29395,0.29455,0.29515,0.29574,0.29634,0.29693,0.29751,0.2981,0.29868,0.29926,0.29984,0.30041,0.30098,0.30155,0.30212,0.30268,0.30324,0.3038,0.30436,0.30491,0.30546,0.30601,0.30655,0.30709,0.30763,0.30816,0.3087,0.30923,0.30976,0.31028,0.3108,0.31132,0.31184,0.31235,0.31286,0.31337,0.31387,0.31438,0.31488,0.31537,0.31587,0.31636,0.31684,0.31733,0.31781,0.31829,0.31877,0.31924,0.31971,0.32018,0.32065,0.32111,0.32157,0.32203,0.32248,0.32293,0.32338,0.32383,0.32427,0.32471,0.32515,0.32558,0.32601,0.32644,0.32687,0.32729,0.32771,0.32813,0.32854,0.32895,0.32936,0.32977,0.33017,0.33057,0.33097,0.33136,0.33175,0.33214,0.33253,0.33291,0.33329,0.33367,0.33404,0.33441,0.33478,0.33515,0.33551,0.33587,0.33623,0.33658,0.33693,0.33728,0.33763,0.33797,0.33831,0.33865,0.33899,0.33932,0.33965,0.33997,0.3403,0.34062,0.34093,0.34125,0.34156,0.34187,0.34218,0.34248,0.34278,0.34308,0.34338,0.34367,0.34396,0.34424,0.34453,0.34481,0.34509,0.34536,0.34564,0.34591,0.34617,0.34644,0.3467,0.34696,0.34721,0.34747,0.34772,0.34796,0.34821,0.34845,0.34869,0.34893,0.34916,0.34939,0.34962,0.34984,0.35007,0.35029,0.3505,0.35072,0.35093,0.35114,0.35134,0.35155,0.35175,0.35194,0.35214,0.35233,0.35252,0.3527,0.35289,0.35307,0.35325,0.35342,0.35359,0.35376,0.35393,0.3541,0.35426,0.35442,0.35457,0.35472,0.35488,0.35502,0.35517,0.35531,0.35545,0.35559,0.35572,0.35585,0.35598,0.35611,0.35623,0.35635,0.35647,0.35658,0.35669,0.3568,0.35691,0.35701,0.35711,0.35721,0.35731,0.3574,0.35749,0.35758,0.35766,0.35774,0.35782,0.3579,0.35797,0.35804,0.35811,0.35818,0.35824,0.3583,0.35836,0.35841,0.35846,0.35851,0.35856,0.3586,0.35864,0.35868,0.35872,0.35875,0.35878,0.35881,0.35883,0.35885,0.35887,0.35889,0.3589,0.35891,0.35892,0.35893,0.35893,0.35893,0.35893,0.35892,0.35891,0.3589,0.35889,0.35887,0.35885,0.35883,0.35881,0.35878,0.35875,0.35872,0.35868,0.35864,0.3586,0.35856,0.35851,0.35846,0.35841,0.35836,0.3583,0.35824,0.35818,0.35811,0.35804,0.35797,0.3579,0.35782,0.35774,0.35766,0.35758,0.35749,0.3574,0.35731,0.35721,0.35711,0.35701,0.35691,0.3568,0.35669,0.35658,0.35647,0.35635,0.35623,0.35611,0.35598,0.35585,0.35572,0.35559,0.35545,0.35531,0.35517,0.35502,0.35488,0.35472,0.35457,0.35442,0.35426,0.3541,0.35393,0.35376,0.35359,0.35342,0.35325,0.35307,0.35289,0.3527,0.35252,0.35233,0.35214,0.35194,0.35175,0.35155,0.35134,0.35114,0.35093,0.35072,0.3505,0.35029,0.35007,0.34984,0.34962,0.34939,0.34916,0.34893,0.34869,0.34845,0.34821,0.34796,0.34772,0.34747,0.34721,0.34696,0.3467,0.34644,0.34617,0.34591,0.34564,0.34536,0.34509,0.34481,0.34453,0.34424,0.34396,0.34367,0.34338,0.34308,0.34278,0.34248,0.34218,0.34187,0.34156,0.34125,0.34093,0.34062,0.3403,0.33997,0.33965,0.33932,0.33899,0.33865,0.33831,0.33797,0.33763,0.33728,0.33693,0.33658,0.33623,0.33587,0.33551,0.33515,0.33478,0.33441,0.33404,0.33367,0.33329,0.33291,0.33253,0.33214,0.33175,0.33136,0.33097,0.33057,0.33017,0.32977,0.32936,0.32895,0.32854,0.32813,0.32771,0.32729,0.32687,0.32644,0.32601,0.32558,0.32515,0.32471,0.32427,0.32383,0.32338,0.32293,0.32248,0.32203,0.32157,0.32111,0.32065,0.32018,0.31971,0.31924,0.31877,0.31829,0.31781,0.31733,0.31684,0.31636,0.31587,0.31537,0.31488,0.31438,0.31387,0.31337,0.31286,0.31235,0.31184,0.31132,0.3108,0.31028,0.30976,0.30923,0.3087,0.30816,0.30763,0.30709,0.30655,0.30601,0.30546,0.30491,0.30436,0.3038,0.30324,0.30268,0.30212,0.30155,0.30098,0.30041,0.29984,0.29926,0.29868,0.2981,0.29751,0.29693,0.29634,0.29574,0.29515,0.29455,0.29395,0.29334,0.29274,0.29213,0.29152,0.2909,0.29028,0.28966,0.28904,0.28842,0.28779,0.28716,0.28653,0.28589,0.28525,0.28461,0.28397,0.28332,0.28268,0.28203,0.28137,0.28072,0.28006,0.2794,0.27873,0.27807,0.2774,0.27673,0.27606,0.27538,0.2747,0.27402,0.27334,0.27266,0.27197,0.27128,0.27059,0.26989,0.2692,0.2685,0.2678,0.26709,0.26639,0.26568,0.26497,0.26426,0.26354,0.26283,0.26211,0.26139,0.26066,0.25994,0.25921,0.25848,0.25775,0.25702,0.25628,0.25554,0.2548,0.25406,0.25332,0.25257,0.25182,0.25107,0.25032,0.24957,0.24881,0.24805,0.24729,0.24653,0.24577,0.245,0.24424,0.24347,0.2427,0.24193,0.24115,0.24038,0.2396,0.23882,0.23804,0.23726,0.23648,0.23569,0.23491,0.23412,0.23333,0.23254,0.23175,0.23095,0.23016,0.22936,0.22857,0.22777,0.22697,0.22616,0.22536,0.22456,0.22375,0.22294,0.22214,0.22133,0.22052,0.21971,0.21889,0.21808,0.21727,0.21645,0.21564,0.21482,0.214,0.21318,0.21236,0.21154,0.21072,0.2099,0.20907,0.20825,0.20742,0.2066,0.20577,0.20495,0.20412,0.20329,0.20246,0.20164,0.20081,0.19998,0.19915,0.19832,0.19748,0.19665,0.19582,0.19499,0.19416,0.19333,0.19249,0.19166,0.19083,0.18999,0.18916,0.18833,0.18749,0.18666,0.18583,0.18499,0.18416,0.18333,0.1825,0.18166,0.18083,0.18,0.17917,0.17833,0.1775,0.17667,0.17584,0.17501,0.17418,0.17335,0.17252,0.17169,0.17087,0.17004,0.16921,0.16839,0.16756,0.16674,0.16591,0.16509,0.16427,0.16344,0.16262,0.1618,0.16098,0.16016,0.15935,0.15853,0.15772,0.1569,0.15609,0.15528,0.15446,0.15365,0.15285,0.15204,0.15123,0.15043,0.14962,0.14882,0.14802,0.14722,0.14642,0.14562,0.14483,0.14403,0.14324,0.14245,0.14166,0.14087,0.14008,0.1393,0.13852,0.13773,0.13695,0.13618,0.1354,0.13462,0.13385,0.13308,0.13231,0.13154,0.13078,0.13001,0.12925,0.12849,0.12773,0.12698,0.12622,0.12547,0.12472,0.12397,0.12323,0.12248,0.12174,0.121,0.12027,0.11953,0.1188,0.11807,0.11734,0.11661,0.11589,0.11517,0.11445,0.11373,0.11302,0.1123,0.11159,0.11089,0.11018,0.10948,0.10878,0.10808,0.10738,0.10669,0.106,0.10531,0.10463,0.10394,0.10326,0.10259,0.10191,0.10124,0.10057,0.099902,0.099238,0.098576,0.097917,0.09726,0.096606,0.095955,0.095306,0.09466,0.094017,0.093377,0.092739,0.092104,0.091472,0.090843,0.090216,0.089592,0.088971,0.088353,0.087737,0.087125,0.086515,0.085908,0.085304,0.084702,0.084104,0.083508,0.082915,0.082325,0.081738,0.081154,0.080573,0.079994,0.079419,0.078846,0.078276,0.077709,0.077145,0.076583,0.076025,0.07547,0.074917,0.074367,0.073821,0.073277,0.072736,0.072198,0.071662,0.07113,0.070601,0.070074,0.069551,0.06903,0.068512,0.067997,0.067485,0.066976,0.06647,0.065966,0.065466,0.064968,0.064473,0.063981,0.063492,0.063006,0.062523,0.062043,0.061565,0.06109,0.060618,0.060149,0.059683,0.05922,0.058759,0.058301,0.057846,0.057394,0.056945,0.056499,0.056055,0.055614,0.055176,0.05474,0.054308,0.053878,0.053451,0.053027,0.052605,0.052186,0.05177,0.051356,0.050946,0.050538,0.050132,0.04973,0.04933,0.048932,0.048538,0.048146,0.047756,0.04737,0.046986,0.046604,0.046225,0.045849,0.045475,0.045104,0.044735,0.044369,0.044006,0.043645,0.043287,0.042931,0.042577,0.042227,0.041878,0.041532,0.041189,0.040848,0.040509,0.040173,0.03984,0.039508,0.039179,0.038853,0.038529,0.038207,0.037888,0.037571,0.037256,0.036944,0.036634,0.036326,0.036021,0.035717,0.035417,0.035118,0.034822,0.034527,0.034235,0.033946,0.033658,0.033373,0.03309,0.032809,0.03253,0.032253,0.031979,0.031706,0.031436,0.031168,0.030901,0.030637,0.030375,0.030115,0.029857,0.029602,0.029348,0.029096,0.028846,0.028598,0.028352,0.028108,0.027866,0.027626,0.027387,0.027151,0.026916,0.026684,0.026453,0.026224,0.025997,0.025772,0.025549,0.025327,0.025108,0.02489,0.024673,0.024459,0.024246,0.024036,0.023826,0.023619,0.023413,0.023209,0.023007,0.022806,0.022607,0.02241,0.022214,0.02202,0.021827,0.021636,0.021447,0.021259,0.021073,0.020888,0.020705,0.020524,0.020344,0.020165,0.019988,0.019813,0.019639,0.019466,0.019295,0.019125,0.018957,0.018791,0.018625,0.018461,0.018299,0.018138,0.017978,0.017819,0.017662,0.017507,0.017352,0.017199,0.017047,0.016897,0.016748,0.0166,0.016453,0.016308,0.016164,0.016021,0.01588,0.015739,0.0156,0.015462,0.015326,0.01519,0.015056,0.014922,0.01479,0.01466,0.01453,0.014401,0.014274,0.014147,0.014022,0.013898,0.013775,0.013653,0.013532,0.013412,0.013293,0.013175,0.013058,0.012943,0.012828,0.012714,0.012602,0.01249,0.012379,0.012269,0.012161,0.012053,0.011946,0.01184,0.011735,0.011631,0.011528,0.011426,0.011324,0.011224,0.011124,0.011025,0.010928,0.010831,0.010735,0.010639,0.010545,0.010452,0.010359,0.010267,0.010176,0.010086,0.0099961,0.0099075,0.0098196,0.0097325,0.0096462,0.0095606,0.0094758,0.0093918,0.0093085,0.0092259,0.0091441,0.009063,0.0089826,0.0089029,0.008824,0.0087457,0.0086682,0.0085913,0.0085152,0.0084397,0.0083648,0.0082907,0.0082172,0.0081443,0.0080721,0.0080006,0.0079296,0.0078594,0.0077897,0.0077207,0.0076522,0.0075844,0.0075172,0.0074506,0.0073846,0.0073191,0.0072543,0.00719,0.0071263,0.0070632,0.0070006,0.0069386,0.0068771,0.0068162,0.0067559,0.006696,0.0066367,0.0065779,0.0065197,0.006462,0.0064047,0.006348,0.0062918,0.0062361,0.0061809,0.0061262,0.0060719,0.0060182,0.0059649,0.0059121,0.0058598,0.0058079,0.0057565,0.0057055,0.005655,0.005605,0.0055554,0.0055062,0.0054575,0.0054092,0.0053613,0.0053139,0.0052668,0.0052202,0.005174,0.0051282,0.0050829,0.0050379,0.0049933,0.0049491,0.0049053,0.0048619,0.0048189,0.0047763,0.004734,0.0046921,0.0046506,0.0046094,0.0045686,0.0045282,0.0044881,0.0044484,0.0044091,0.00437,0.0043314,0.004293,0.004255,0.0042174,0.00418,0.004143,0.0041064,0.00407,0.004034,0.0039983,0.0039629,0.0039278,0.003893,0.0038586,0.0038244,0.0037905,0.003757,0.0037237,0.0036907,0.003658,0.0036256,0.0035935,0.0035617,0.0035301,0.0034988,0.0034678,0.0034371,0.0034066,0.0033765,0.0033465,0.0033169,0.0032875,0.0032583,0.0032294,0.0032008,0.0031724,0.0031443,0.0031164,0.0030887,0.0030613,0.0030342,0.0030072,0.0029805,0.0029541,0.0029279,0.0029019,0.0028761,0.0028506,0.0028253,0.0028002,0.0027753,0.0027506,0.0027262,0.002702,0.0026779,0.0026541,0.0026305,0.0026071,0.002584,0.002561,0.0025382,0.0025156,0.0024932,0.002471,0.002449,0.0024272,0.0024056,0.0023842,0.002363,0.0023419,0.002321,0.0023003,0.0022798,0.0022595,0.0022394,0.0022194,0.0021996,0.00218,0.0021605,0.0021412,0.0021221,0.0021032,0.0020844,0.0020658,0.0020473,0.002029,0.0020109,0.0019929,0.0019751,0.0019574,0.0019399,0.0019225,0.0019053,0.0018883,0.0018714,0.0018546,0.001838,0.0018215,0.0018052,0.001789,0.001773,0.0017571,0.0017413,0.0017257,0.0017102,0.0016949,0.0016797,0.0016646,0.0016496,0.0016348,0.0016201,0.0016055,0.0015911,0.0015768,0.0015626,0.0015486,0.0015346,0.0015208,0.0015071,0.0014935,0.0014801,0.0014667,0.0014535,0.0014404,0.0014274,0.0014145,0.0014018,0.0013891,0.0013766,0.0013641,0.0013518,0.0013396,0.0013275,0.0013155,0.0013036,0.0012918,0.0012801,0.0012685,0.001257,0.0012456,0.0012344,0.0012232,0.0012121,0.0012011,0.0011902,0.0011794,0.0011687,0.0011581,0.0011476,0.0011372,0.0011268,0.0011166,0.0011064,0.0010964,0.0010864,0.0010765,0.0010667,0.001057,0.0010474,0.0010378,0.0010284,0.001019,0.0010097,0.0010005,0.00099135,0.0009823,0.00097333,0.00096444,0.00095563,0.0009469,0.00093824,0.00092966,0.00092116,0.00091273,0.00090437,0.00089609,0.00088788,0.00087975,0.00087169,0.00086369,0.00085577,0.00084792,0.00084014,0.00083243,0.00082478,0.00081721,0.0008097,0.00080226,0.00079488,0.00078757,0.00078032,0.00077314,0.00076602,0.00075897,0.00075197,0.00074504,0.00073818,0.00073137,0.00072462,0.00071793,0.00071131,0.00070474,0.00069823,0.00069178,0.00068538,0.00067905,0.00067277,0.00066654,0.00066037,0.00065426,0.0006482,0.00064219,0.00063624,0.00063034,0.0006245,0.0006187,0.00061296,0.00060727,0.00060163,0.00059605,0.00059051,0.00058502,0.00057958,0.00057419,0.00056884,0.00056355,0.0005583,0.0005531,0.00054795,0.00054284,0.00053778,0.00053277,0.0005278,0.00052287,0.00051799,0.00051315,0.00050836,0.00050361,0.0004989,0.00049424,0.00048961,0.00048503,0.00048049,0.00047599,0.00047153,0.00046712,0.00046274,0.0004584,0.0004541,0.00044984,0.00044562,0.00044143,0.00043729,0.00043318,0.00042911,0.00042507,0.00042108,0.00041712,0.00041319,0.0004093,0.00040545,0.00040163,0.00039784,0.00039409,0.00039038,0.0003867,0.00038305,0.00037943,0.00037585,0.0003723,0.00036878,0.0003653,0.00036185,0.00035842,0.00035503,0.00035167,0.00034835,0.00034505,0.00034178,0.00033854,0.00033533,0.00033215,0.000329,0.00032588,0.00032279,0.00031972,0.00031669,0.00031368,0.0003107,0.00030775,0.00030482,0.00030192,0.00029905,0.0002962,0.00029338,0.00029059,0.00028782,0.00028508,0.00028236,0.00027967,0.000277,0.00027435,0.00027174,0.00026914,0.00026657,0.00026402,0.0002615,0.000259,0.00025652,0.00025407,0.00025164,0.00024923,0.00024684,0.00024448,0.00024214,0.00023982,0.00023752,0.00023524,0.00023298,0.00023075,0.00022853,0.00022634,0.00022416,0.00022201,0.00021988,0.00021776,0.00021567,0.00021359,0.00021154,0.0002095,0.00020749,0.00020549,0.00020351,0.00020155,0.0001996,0.00019768,0.00019577,0.00019388,0.00019201,0.00019016,0.00018832,0.0001865,0.0001847,0.00018292,0.00018115,0.0001794,0.00017766,0.00017594,0.00017424,0.00017255,0.00017088,0.00016922,0.00016758,0.00016596,0.00016435,0.00016276,0.00016118,0.00015961,0.00015806,0.00015653,0.00015501,0.0001535,0.00015201,0.00015053,0.00014907,0.00014762,0.00014618,0.00014476,0.00014335,0.00014195,0.00014057,0.0001392,0.00013784,0.0001365,0.00013517,0.00013385,0.00013254,0.00013125,0.00012997,0.0001287,0.00012744,0.0001262,0.00012496,0.00012374,0.00012253,0.00012133,0.00012015,0.00011897,0.00011781,0.00011665,0.00011551,0.00011438,0.00011326,0.00011215,0.00011105,0.00010996,0.00010888,0.00010781,0.00010675,0.00010571,0.00010467,0.00010364,0.00010262,0.00010161,0.00010061,9.9624e-05,9.8644e-05,9.7673e-05,9.6712e-05,9.576e-05,9.4817e-05,9.3883e-05,9.2958e-05,9.2042e-05,9.1135e-05,9.0236e-05,8.9346e-05,8.8465e-05,8.7592e-05,8.6728e-05,8.5872e-05,8.5024e-05,8.4184e-05,8.3352e-05,8.2529e-05,8.1713e-05,8.0905e-05,8.0105e-05,7.9313e-05,7.8528e-05,7.7751e-05,7.6981e-05,7.6219e-05,7.5464e-05,7.4717e-05,7.3977e-05,7.3243e-05,7.2517e-05,7.1798e-05,7.1086e-05,7.0381e-05,6.9683e-05,6.8991e-05,6.8306e-05,6.7628e-05,6.6956e-05,6.6291e-05,6.5633e-05,6.498e-05,6.4334e-05,6.3695e-05,6.3061e-05,6.2434e-05,6.1813e-05,6.1197e-05,6.0588e-05,5.9985e-05,5.9388e-05,5.8796e-05,5.821e-05,5.763e-05,5.7056e-05,5.6487e-05,5.5923e-05,5.5366e-05,5.4813e-05,5.4266e-05,5.3725e-05,5.3188e-05,5.2657e-05,5.2131e-05,5.161e-05,5.1095e-05,5.0584e-05,5.0078e-05,4.9577e-05,4.9082e-05,4.8591e-05,4.8105e-05,4.7623e-05,4.7146e-05,4.6674e-05,4.6207e-05,4.5744e-05,4.5286e-05,4.4832e-05,4.4383e-05,4.3938e-05,4.3497e-05,4.3061e-05,4.2629e-05,4.2202e-05,4.1778e-05,4.1359e-05,4.0944e-05,4.0532e-05,4.0125e-05,3.9722e-05,3.9323e-05,3.8928e-05,3.8537e-05,3.8149e-05,3.7766e-05,3.7386e-05,3.701e-05,3.6638e-05,3.6269e-05,3.5904e-05,3.5542e-05,3.5185e-05,3.483e-05,3.4479e-05,3.4132e-05,3.3788e-05,3.3448e-05,3.311e-05,3.2777e-05,3.2446e-05,3.2119e-05,3.1795e-05,3.1474e-05,3.1156e-05,3.0842e-05,3.053e-05,3.0222e-05,2.9917e-05,2.9615e-05,2.9316e-05,2.9019e-05,2.8726e-05,2.8436e-05,2.8148e-05,2.7864e-05,2.7582e-05,2.7303e-05,2.7026e-05,2.6753e-05,2.6482e-05,2.6214e-05,2.5949e-05,2.5686e-05,2.5426e-05,2.5168e-05,2.4913e-05,2.4661e-05,2.4411e-05,2.4163e-05,2.3918e-05,2.3676e-05,2.3436e-05,2.3198e-05,2.2963e-05,2.273e-05,2.2499e-05,2.227e-05,2.2044e-05,2.1821e-05,2.1599e-05,2.138e-05,2.1162e-05,2.0947e-05,2.0734e-05,2.0524e-05,2.0315e-05,2.0109e-05,1.9904e-05,1.9702e-05,1.9501e-05,1.9303e-05,1.9106e-05,1.8912e-05,1.8719e-05,1.8529e-05,1.834e-05,1.8153e-05,1.7969e-05,1.7785e-05,1.7604e-05,1.7425e-05,1.7247e-05,1.7071e-05,1.6897e-05,1.6725e-05,1.6555e-05,1.6386e-05,1.6219e-05,1.6053e-05,1.5889e-05,1.5727e-05,1.5567e-05,1.5408e-05,1.525e-05,1.5095e-05,1.4941e-05,1.4788e-05,1.4637e-05,1.4487e-05,1.4339e-05,1.4193e-05,1.4048e-05,1.3904e-05,1.3762e-05,1.3621e-05,1.3482e-05,1.3344e-05,1.3208e-05,1.3072e-05,1.2939e-05,1.2806e-05,1.2675e-05,1.2545e-05,1.2417e-05,1.229e-05,1.2164e-05,1.2039e-05,1.1916e-05,1.1794e-05,1.1673e-05,1.1553e-05,1.1435e-05,1.1318e-05,1.1202e-05,1.1087e-05,1.0973e-05,1.0861e-05,1.0749e-05,1.0639e-05,1.053e-05,1.0422e-05,1.0315e-05,1.0209e-05,1.0104e-05,1.0001e-05,9.8979e-06,9.7963e-06,9.6957e-06,9.5961e-06,9.4976e-06,9.4e-06,9.3034e-06,9.2078e-06,9.1131e-06,9.0194e-06,8.9267e-06,8.8349e-06,8.7441e-06,8.6542e-06,8.5652e-06,8.4771e-06,8.3899e-06,8.3036e-06,8.2182e-06,8.1336e-06,8.0499e-06,7.967e-06,7.885e-06,7.8038e-06,7.7234e-06,7.6439e-06,7.5652e-06,7.4873e-06,7.4102e-06,7.3339e-06,7.2583e-06,7.1835e-06,7.1095e-06,7.0362e-06,6.9636e-06,6.8918e-06,6.8208e-06,6.7504e-06,6.6808e-06,6.6119e-06,6.5438e-06,6.4763e-06,6.4095e-06,6.3434e-06,6.2779e-06,6.2131e-06,6.149e-06,6.0855e-06,6.0226e-06,5.9604e-06,5.8989e-06,5.838e-06,5.7777e-06,5.7181e-06,5.6591e-06,5.6006e-06,5.5428e-06,5.4855e-06,5.4288e-06,5.3727e-06,5.3171e-06,5.2621e-06,5.2077e-06,5.1538e-06,5.1006e-06,5.0479e-06,4.9957e-06,4.9441e-06,4.893e-06,4.8424e-06,4.7923e-06,4.7426e-06,4.6935e-06,4.6449e-06,4.5968e-06,4.5492e-06,4.5021e-06,4.4556e-06,4.4095e-06,4.3639e-06,4.3187e-06,4.274e-06,4.2298e-06,4.1859e-06,4.1425e-06,4.0996e-06,4.057e-06,4.015e-06,3.9734e-06,3.9322e-06,3.8915e-06,3.8512e-06,3.8113e-06,3.7719e-06,3.7328e-06,3.6941e-06,3.6558e-06,3.6178e-06,3.5802e-06,3.543e-06,3.5062e-06,3.4698e-06,3.4339e-06,3.3983e-06,3.3631e-06,3.3282e-06,3.2938e-06,3.2596e-06,3.2258e-06,3.1922e-06,3.159e-06,3.1262e-06,3.0936e-06,3.0615e-06,3.0297e-06,2.9982e-06,2.9671e-06,2.9364e-06,2.906e-06,2.8758e-06,2.846e-06,2.8164e-06,2.7871e-06,2.758e-06,2.7293e-06,2.7009e-06,2.6727e-06,2.645e-06,2.6175e-06,2.5903e-06,2.5635e-06,2.5369e-06,2.5106e-06,2.4845e-06,2.4587e-06,2.433e-06,2.4076e-06,2.3825e-06,2.3576e-06,2.333e-06,2.3088e-06,2.2848e-06,2.2611e-06,2.2376e-06,2.2144e-06,2.1915e-06,2.1687e-06,2.1461e-06,2.1236e-06,2.1014e-06,2.0794e-06,2.0577e-06,2.0362e-06,2.015e-06,1.9941e-06,1.9734e-06,1.953e-06,1.9327e-06,1.9127e-06,1.8927e-06,1.873e-06,1.8534e-06,1.8339e-06,1.8147e-06,1.7957e-06,1.7769e-06,1.7584e-06,1.7401e-06,1.7221e-06,1.7043e-06,1.6866e-06,1.6691e-06,1.6517e-06,1.6344e-06,1.6173e-06,1.6003e-06,1.5834e-06,1.5668e-06,1.5504e-06,1.5343e-06,1.5184e-06,1.5026e-06,1.4871e-06,1.4717e-06,1.4564e-06,1.4412e-06,1.4261e-06,1.4111e-06,1.3962e-06,1.3815e-06,1.3669e-06,1.3526e-06,1.3385e-06,1.3247e-06,1.311e-06,1.2975e-06,1.2841e-06,1.2707e-06,1.2574e-06,1.2442e-06,1.231e-06,1.218e-06,1.2051e-06,1.1924e-06,1.1799e-06,1.1676e-06,1.1555e-06,1.1436e-06,1.1319e-06,1.1202e-06,1.1086e-06,1.097e-06,1.0854e-06,1.0738e-06,1.0624e-06,1.0511e-06,1.0399e-06,1.029e-06,1.0183e-06,1.0079e-06,9.9756e-07,9.8735e-07,9.772e-07,9.6705e-07,9.5688e-07,9.4671e-07,9.3657e-07,9.2651e-07,9.1659e-07,9.0685e-07,8.9734e-07,8.8806e-07,8.7898e-07,8.7005e-07,8.612e-07,8.5237e-07,8.4351e-07,8.3461e-07,8.2567e-07,8.1675e-07,8.0789e-07,7.9918e-07,7.9067e-07,7.8239e-07,7.7434e-07,7.6649e-07,7.5877e-07,7.5111e-07,7.4344e-07,7.3571e-07,7.279e-07,7.2003e-07,7.1215e-07,7.0434e-07,6.9669e-07,6.8924e-07,6.8204e-07,6.7508e-07,6.6832e-07,6.6167e-07,6.5506e-07,6.4841e-07,6.4165e-07,6.3478e-07,6.2783e-07,6.2085e-07,6.1395e-07,6.0721e-07,6.007e-07,5.9445e-07,5.8846e-07,5.8266e-07,5.7697e-07,5.7128e-07,5.6551e-07,5.596e-07,5.5354e-07,5.4737e-07,5.4117e-07,5.3504e-07,5.291e-07,5.2341e-07,5.1801e-07,5.1288e-07,5.0794e-07,5.031e-07,4.9822e-07,4.9322e-07,4.8803e-07,4.8266e-07,4.7715e-07,4.7161e-07,4.6616e-07,4.6091e-07,4.5595e-07,4.513e-07,4.4694e-07,4.4278e-07,4.3868e-07,4.3452e-07,4.3019e-07,4.2562e-07,4.2083e-07,4.1588e-07,4.109e-07,4.0601e-07,4.0137e-07,3.9706e-07,3.9309e-07,3.8943e-07,3.8596e-07,3.8254e-07,3.7901e-07,3.7525e-07,3.7121e-07,3.669e-07,3.6241e-07,3.5789e-07,3.535e-07,3.4939e-07,3.4565e-07,3.423e-07,3.3927e-07,3.3644e-07,3.3362e-07,3.3064e-07,3.2738e-07,3.2378e-07,3.1986e-07,3.1575e-07,3.1161e-07,3.0763e-07,3.0399e-07,3.0077e-07,2.9798e-07,2.9555e-07,2.9329e-07,2.9102e-07,2.8853e-07,2.8569e-07,2.8244e-07,2.7884e-07,2.7502e-07,2.7119e-07,2.6756e-07,2.6432e-07,2.6158e-07,2.5933e-07,2.5744e-07,2.5573e-07,2.5395e-07,2.5188e-07,2.4939e-07,2.4642e-07,2.4305e-07,2.3945e-07,2.3586e-07,2.3253e-07,2.2967e-07,2.2737e-07,2.2561e-07,2.2425e-07,2.2304e-07,2.2171e-07,2.2002e-07,2.1781e-07,2.1505e-07,2.1184e-07,2.0839e-07,2.0498e-07,2.0189e-07,1.9936e-07,1.9749e-07,1.9622e-07,1.9536e-07,1.9463e-07,1.9371e-07,1.9233e-07,1.9034e-07,1.8772e-07,1.846e-07,1.8123e-07,1.7795e-07,1.7507e-07,1.7285e-07,1.7139e-07,1.706e-07,1.7024e-07,1.6996e-07,1.6942e-07,1.6831e-07,1.6648e-07,1.6393e-07,1.6082e-07,1.5747e-07,1.5426e-07,1.5156e-07,1.4965e-07,1.486e-07,1.4829e-07,1.4842e-07,1.4859e-07,1.4838e-07,1.4749e-07,1.4576e-07,1.4321e-07,1.4005e-07,1.3666e-07,1.3348e-07,1.3093e-07,1.2931e-07,1.2869e-07,1.2888e-07,1.2951e-07,1.3011e-07,1.3021e-07,1.2949e-07,1.2779e-07,1.2517e-07,1.2189e-07,1.184e-07,1.152e-07,1.1279e-07,1.1147e-07,1.113e-07,1.1202e-07,1.1317e-07,1.1418e-07,1.1456e-07,1.1395e-07,1.1222e-07,1.0946e-07,1.06e-07,1.0234e-07,9.9087e-08,9.6796e-08,9.581e-08,9.6133e-08,9.742e-08,9.9093e-08,1.0051e-07,1.0113e-07,1.0058e-07,9.8752e-08,9.5782e-08,9.2058e-08,8.8172e-08,8.4825e-08,8.2658e-08,8.2041e-08,8.2916e-08,8.4818e-08,8.7037e-08,8.8848e-08,8.9661e-08,8.9117e-08,8.7125e-08,8.387e-08,7.9808e-08,7.5627e-08,7.2147e-08,7.0114e-08,6.9926e-08,7.1435e-08,7.4009e-08,7.6793e-08,7.8974e-08,7.9937e-08,7.9336e-08,7.711e-08,7.3495e-08,6.9015e-08,6.4466e-08,6.0812e-08,5.8939e-08,5.9269e-08,6.1515e-08,6.4827e-08,6.8185e-08,7.0705e-08,7.1765e-08,7.1043e-08,6.8516e-08,6.4465e-08,5.9483e-08,5.4481e-08,5.0607e-08,4.8938e-08,4.9915e-08,5.3029e-08,5.7143e-08,6.1071e-08,6.3884e-08,6.4979e-08,6.4073e-08,6.1181e-08,5.6623e-08,5.1049e-08,4.5491e-08,4.1339e-08,3.9947e-08,4.1762e-08,4.59e-08,5.0867e-08,5.5335e-08,5.8377e-08,5.9441e-08,5.8291e-08,5.4978e-08,4.9847e-08,4.3587e-08,3.7348e-08,3.2834e-08,3.1848e-08,3.4775e-08,4.0108e-08,4.5938e-08,5.0879e-08,5.407e-08,5.5033e-08,5.3587e-08,4.9811e-08,4.4061e-08,3.7027e-08,2.994e-08,2.4933e-08,2.4584e-08,2.9021e-08,3.5683e-08,4.2319e-08,4.7624e-08,5.0867e-08,5.1662e-08,4.988e-08,4.5625e-08,3.924e-08,3.137e-08,2.3231e-08,1.749e-08,1.8249e-08,2.4708e-08,3.27e-08,3.9978e-08,4.5498e-08,4.8689e-08,4.9256e-08,4.7121e-08,4.2403e-08,3.5422e-08,2.6729e-08,1.7341e-08,1.0368e-08,1.3321e-08,2.2178e-08,3.1224e-08,3.888e-08,4.4436e-08,4.7472e-08,4.7768e-08,4.5286e-08,4.0165e-08,3.2709e-08,2.3379e-08,1.2823e-08,3.435e-09,1.1112e-08,2.174e-08,3.1258e-08,3.8966e-08,4.4381e-08,4.7173e-08".split(
                ',')).astype(float)  # Already given as absolute value
        self._U_ref = np.asarray(
            "9.061e-30,2.0729e-29,4.5992e-30,1.3086e-29,5.9449e-30,1.0125e-29,8.9277e-30,9.6485e-30,1.9936e-30,9.4603e-30,6.5351e-30,8.0522e-30,1.3598e-29,3.4628e-30,1.1794e-30,2.0139e-29,2.4007e-30,1.6919e-30,6.1431e-31,1.4766e-30,2.9359e-30,2.5204e-30,2.8067e-30,6.7658e-31,9.2435e-31,4.6936e-31,9.841e-31,2.1986e-30,9.3693e-32,1.7263e-30,2.5204e-30,1.7848e-31,2.8514e-31,9.8572e-31,1.7154e-31,4.8163e-31,1.4398e-30,1.0357e-31,1.2722e-31,9.582e-31,7.0703e-31,4.6708e-31,1.8054e-30,9.0382e-31,1.4914e-30,4.3062e-31,2.1442e-31,2.131e-30,1.1025e-31,1.3911e-30,2.5814e-30,2.6033e-30,3.7211e-32,3.1004e-31,4.4941e-31,3.8374e-31,2.6163e-30,4.5546e-31,4.6643e-32,7.1777e-32,2.3566e-31,3.1415e-30,1.9776e-31,4.2312e-31,9.3815e-31,3.4975e-31,8.102e-31,1.4995e-30,2.6091e-31,5.763e-31,3.0032e-31,3.8926e-31,3.577e-31,1.0207e-30,1.2184e-30,1.4758e-31,1.8763e-31,7.2441e-31,1.1174e-30,1.7095e-31,3.7813e-31,1.1264e-30,3.8416e-31,1.6381e-30,1.345e-30,1.1316e-30,1.6954e-31,7.6838e-31,1.3458e-30,4.5779e-31,1.7973e-32,2.0782e-31,1.2471e-31,4.0606e-30,5.0058e-31,5.2338e-32,1.2104e-30,6.0748e-31,1.5247e-31,1.6456e-31,1.3418e-30,1.3602e-31,9.2222e-33,2.1177e-32,9.2136e-31,2.816e-31,4.0679e-31,1.6748e-30,1.1574e-30,1.4868e-30,1.0353e-31,7.3237e-31,2.5419e-30,8.4304e-31,1.4471e-30,1.1645e-31,8.9949e-32,1.0147e-31,1.1925e-31,7.8749e-32,2.6717e-30,2.6135e-31,1.8641e-30,2.7333e-30,4.0661e-30,1.6575e-30,4.0911e-32,1.8954e-31,7.1765e-31,2.6227e-31,2.8081e-31,7.4742e-31,1.367e-30,3.8148e-32,1.3225e-30,2.7088e-30,5.2757e-31,2.0585e-31,8.8848e-31,1.4744e-30,4.3992e-31,1.9214e-30,5.3767e-30,4.821e-31,4.8206e-31,1.2979e-31,3.0508e-31,9.8654e-32,8.3708e-32,3.1238e-30,6.3484e-31,1.347e-31,7.7717e-31,2.1034e-31,2.9492e-30,7.3172e-31,1.1392e-30,1.0483e-30,9.4523e-31,4.8089e-32,9.4566e-32,1.4549e-30,6.1795e-32,5.3572e-31,2.5249e-30,3.5024e-31,1.0518e-31,9.6317e-31,1.9182e-30,2.7641e-31,9.2844e-31,1.2459e-31,8.2638e-31,1.8697e-30,8.0342e-31,1.6068e-30,1.6517e-30,5.49e-31,3.4634e-32,2.505e-31,2.2038e-30,3.1199e-32,2.5422e-32,3.9227e-32,1.0206e-31,6.1603e-31,2.676e-31,2.1603e-32,9.4449e-31,1.3767e-30,1.7904e-31,4.0791e-32,8.4435e-32,9.0141e-31,5.261e-31,1.4183e-31,6.6922e-31,2.4815e-30,6.4417e-31,4.9012e-32,1.5506e-30,9.3828e-31,1.4158e-31,4.1827e-32,7.1765e-31,1.6834e-31,1.2559e-31,1.2995e-30,7.5075e-32,3.9472e-31,9.2975e-31,8.2232e-31,3.4834e-31,2.4324e-31,9.0789e-31,2.6476e-31,6.3239e-31,2.4524e-31,3.5157e-31,2.0628e-30,1.0565e-30,7.9212e-31,9.8785e-31,2.3139e-31,8.6157e-31,5.302e-30,3.7336e-30,7.5854e-31,1.4106e-31,2.0271e-30,8.5334e-31,3.9191e-31,2.0885e-30,2.5152e-30,4.6996e-32,3.3268e-30,1.06e-30,6.3235e-32,1.422e-30,1.9045e-31,6.2801e-30,2.0355e-31,6.7489e-30,2.6658e-30,6.1173e-30,1.4518e-31,3.4603e-31,2.3977e-31,9.4318e-30,4.4489e-31,5.8653e-30,3.2778e-30,1.8108e-30,3.4688e-30,3.4556e-30,2.4905e-30,8.0962e-32,4.0084e-30,1.4869e-30,4.3553e-30,1.5214e-30,1.1838e-30,9.7743e-31,2.2702e-31,1.9318e-30,2.4544e-31,1.4806e-31,3.8206e-32,3.593e-30,1.3109e-31,1.5734e-30,6.5268e-31,1.5945e-30,1.9003e-31,2.8933e-31,6.0974e-31,7.7649e-32,8.9473e-31,3.0512e-31,6.3168e-31,4.7495e-31,1.1963e-30,3.8006e-32,5.4723e-31,1.3056e-30,7.0637e-31,8.4145e-31,9.6748e-31,2.6527e-31,2.6123e-30,2.2605e-30,9.995e-31,5.9844e-31,6.0839e-33,1.489e-31,1.6143e-31,1.7158e-30,2.4282e-30,3.0609e-30,2.2258e-32,8.251e-31,9.9425e-31,1.0539e-30,1.569e-30,1.4105e-30,6.8445e-31,1.0649e-30,1.989e-30,1.4221e-31,2.1062e-31,2.2975e-31,2.6642e-31,2.8708e-31,5.8841e-31,4.8587e-32,8.4387e-32,4.8422e-31,2.3048e-31,2.3752e-31,8.042e-32,1.2702e-30,4.9247e-32,1.8657e-31,4.4144e-31,1.0902e-30,1.9115e-31,4.7267e-31,8.2465e-31,7.4183e-31,1.0819e-30,3.0388e-31,7.0588e-31,2.9661e-31,2.9301e-31,5.0621e-31,2.2778e-31,2.3823e-31,2.2565e-30,2.7151e-30,1.3082e-30,1.0774e-30,7.3269e-32,4.8317e-31,1.0568e-31,3.209e-32,1.5235e-30,1.3105e-33,8.7019e-31,2.7853e-31,8.7861e-32,3.6268e-32,3.5229e-31,1.3384e-30,4.7926e-31,2.4347e-31,1.6398e-30,2.8608e-31,2.251e-30,3.1426e-32,1.5263e-30,1.6853e-31,5.3221e-31,5.9076e-31,3.9546e-31,1.3704e-30,3.244e-31,3.0219e-32,1.0924e-32,9.5016e-31,2.7083e-30,2.7845e-30,7.2493e-31,4.8069e-30,1.7609e-30,2.952e-30,1.4158e-30,1.3434e-31,3.2023e-30,2.2232e-30,4.6713e-31,9.6128e-31,4.378e-31,5.2993e-32,2.0796e-30,1.5862e-31,1.3338e-30,4.5474e-31,5.9461e-31,2.3165e-31,8.9059e-31,7.5252e-31,1.3857e-30,5.0079e-31,3.6739e-30,2.7928e-30,3.3992e-30,2.5898e-31,2.1444e-30,3.1621e-31,1.8739e-30,1.7162e-30,6.5041e-31,1.8297e-31,3.3804e-31,5.7392e-31,1.2953e-30,1.1517e-30,4.1116e-31,1.2294e-31,6.7091e-31,1.6027e-30,2.575e-31,4.2985e-31,1.268e-31,1.5965e-30,5.3758e-31,1.4698e-31,3.538e-31,2.0641e-30,1.6816e-30,5.4625e-31,1.3477e-30,2.3247e-30,2.3839e-31,1.1086e-31,1.3844e-30,1.8905e-31,3.956e-31,1.3528e-30,6.8763e-31,2.4113e-31,4.386e-31,1.0554e-30,1.1404e-32,2.3085e-31,1.0695e-30,1.338e-30,9.7097e-31,2.881e-31,8.2747e-31,5.4262e-30,1.0844e-30,2.5652e-30,3.9924e-31,2.1701e-30,1.161e-30,6.8476e-31,1.6443e-31,1.2716e-30,5.9982e-32,2.6021e-31,1.8584e-30,2.3389e-29,6.9937e-31,9.5978e-31,4.0042e-32,6.824e-31,9.7802e-31,2.2955e-30,6.4015e-31,1.1065e-31,1.5896e-31,6.7333e-31,6.9451e-31,1.1994e-31,4.7005e-31,4.5636e-31,4.5451e-31,4.3718e-31,5.3201e-32,5.9783e-31,4.7761e-31,2.5857e-30,3.9794e-31,1.6977e-30,1.2391e-31,3.5548e-31,1.0932e-30,2.0278e-31,5.1817e-32,8.0092e-32,1.1416e-31,2.5902e-31,5.7587e-31,9.0053e-31,2.0975e-31,5.4081e-31,2.3145e-30,8.2478e-32,4.4402e-31,1.4446e-31,1.9949e-30,8.4029e-32,1.9205e-31,1.6551e-30,1.0824e-30,1.9004e-30,2.9197e-30,2.5504e-30,4.8272e-31,1.5393e-30,1.6801e-30,2.3214e-30,5.0813e-31,9.6961e-31,3.0458e-30,2.8735e-30,5.5721e-30,4.7502e-30,4.945e-30,1.1518e-30,5.246e-31,1.7688e-30,2.1026e-30,1.7706e-30,2.4833e-30,1.4664e-30,2.1097e-31,1.3027e-30,8.261e-32,3.987e-30,4.9922e-32,1.3655e-31,1.5519e-31,1.3784e-30,1.6136e-30,1.222e-30,2.6528e-31,6.7256e-31,2.5466e-31,1.6492e-30,8.7275e-32,1.2171e-30,1.4552e-31,1.5985e-31,3.7199e-31,3.474e-31,2.9261e-30,8.4309e-31,4.1516e-31,9.9903e-31,1.3124e-30,1.2872e-31,1.0594e-30,1.789e-30,1.6681e-31,6.4139e-31,1.7559e-32,1.8177e-31,1.5075e-30,5.7846e-31,1.9995e-30,3.1932e-31,1.538e-31,2.1145e-31,5e-31,1.1522e-30,3.073e-30,1.1426e-31,1.4606e-30,1.6691e-30,1.0167e-30,3.3255e-30,6.8624e-31,5.1199e-31,6.0502e-32,8.2989e-32,3.905e-31,6.5534e-31,2.8501e-31,1.0884e-30,8.361e-31,1.6215e-30,3.5858e-32,2.2034e-30,2.3097e-30,9.3238e-31,1.2511e-30,1.8604e-31,4.1876e-31,5.7454e-31,5.6244e-32,1.1209e-30,1.2885e-31,1.5316e-31,7.0969e-31,9.2118e-31,1.2393e-31,3.6219e-31,1.1336e-30,1.9861e-31,1.0189e-30,1.0385e-30,1.6418e-30,3.0675e-31,2.8756e-31,8.3922e-31,3.1217e-32,5.8332e-32,1.1021e-30,8.8542e-32,1.0503e-30,5.1617e-31,6.7938e-31,2.0462e-30,8.0918e-31,4.689e-31,1.7758e-30,1.5513e-30,1.6747e-31,1.0148e-30,2.0133e-31,9.1332e-31,1.0193e-31,5.6698e-31,2.184e-30,1.3643e-30,3.8828e-31,7.4004e-31,2.7817e-31,2.9295e-30,3.7582e-31,6.7072e-31,2.9831e-32,5.7103e-31,3.3366e-30,2.6783e-30,1.9777e-31,3.1937e-30,5.9387e-31,1.0125e-30,1.4112e-30,6.9669e-31,2.9514e-30,4.3299e-31,2.0925e-31,1.5204e-30,4.7313e-31,1.7741e-30,4.6876e-31,2.0145e-30,2.9119e-31,3.1865e-31,6.105e-31,2.0225e-30,2.1389e-31,1.0796e-30,9.7871e-32,6.5548e-32,1.6055e-30,2.5085e-31,4.3932e-31,4.8538e-31,1.4417e-31,6.1765e-31,6.0478e-31,3.7973e-31,1.5553e-30,1.463e-31,1.9555e-30,7.6886e-32,1.3143e-30,8.7909e-31,1.9067e-31,1.362e-30,6.0658e-31,1.5785e-30,7.2632e-31,7.0405e-31,1.1461e-30,4.0645e-31,1.6495e-31,3.7759e-31,7.6264e-31,1.5864e-31,7.8472e-33,4.4177e-31,7.0321e-31,2.0267e-32,9.348e-32,7.3259e-31,9.753e-31,2.3588e-31,1.0686e-31,2.2358e-31,1.4226e-30,9.1765e-32,9.3942e-32,5.6561e-32,4.8615e-31,8.916e-31,8.5993e-31,2.5614e-32,1.9923e-31,1.5025e-30,4.6505e-31,7.9943e-31,1.8466e-31,1.3571e-31,2.4737e-32,4.7847e-31,6.2841e-31,6.1957e-31,4.2063e-32,9.595e-32,6.1366e-32,1.6499e-30,2.5187e-31,8.0939e-31,6.9177e-31,3.2089e-31,1.6769e-30,2.3618e-32,1.573e-30,5.0157e-31,3.8515e-32,5.3332e-32,2.8494e-31,8.772e-31,4.8644e-31,3.7768e-32,7.4839e-32,1.1052e-31,1.4527e-30,2.1056e-30,6.4776e-32,2.52e-32,7.6039e-31,2.2236e-31,1.6696e-30,1.2031e-30,6.1039e-32,7.3161e-31,1.9907e-31,1.8951e-31,7.528e-31,2.6779e-32,1.2807e-30,2.2112e-30,2.5745e-31,3.1962e-31,2.412e-30,3.3163e-31,5.5052e-31,2.8048e-30,1.669e-30,3.4143e-31,2.394e-30,1.2645e-30,1.5207e-31,1.4784e-30,1.2137e-30,6.1631e-30,4.9326e-31,2.1561e-30,1.7217e-31,1.2807e-30,1.1695e-30,1.8482e-30,1.6539e-30,2.8181e-30,4.0807e-30,1.4089e-31,6.2221e-31,8.4505e-32,2.9351e-30,1.2938e-30,4.8486e-30,1.2086e-32,2.7087e-31,1.3888e-31,2.769e-31,1.9458e-30,1.1264e-30,2.3653e-30,5.8171e-30,1.2232e-31,4.6494e-31,2.1488e-30,1.1356e-30,5.5064e-31,8.3348e-31,2.2938e-30,9.8723e-31,3.9112e-30,2.8376e-30,1.5027e-30,3.9671e-31,3.0593e-30,3.9941e-30,7.4498e-31,3.197e-31,5.3817e-31,2.3462e-30,3.6607e-31,4.4086e-30,9.4589e-32,1.6143e-31,2.728e-31,4.527e-31,4.0729e-31,2.3782e-31,2.7125e-31,1.2599e-30,4.1303e-31,1.0176e-30,2.0908e-31,3.7358e-31,7.0467e-31,1.3379e-31,9.1154e-32,3.2387e-31,1.8314e-31,1.692e-30,2.0775e-30,1.9549e-31,8.5853e-32,8.5838e-31,4.1048e-31,2.9995e-31,4.5289e-32,1.3522e-31,8.5744e-31,1.5088e-30,7.4039e-31,8.2001e-31,9.3585e-32,1.0777e-30,1.3621e-30,6.4411e-31,1.8743e-31,1.0885e-32,8.8177e-31,1.1602e-30,8.4905e-31,1.8042e-30,8.4806e-32,2.3929e-30,1.1777e-30,3.5932e-32,1.0842e-31,7.5861e-31,1.4308e-30,1.6383e-32,1.2674e-30,5.6631e-31,7.8446e-31,2.7938e-30,7.8816e-32,9.1523e-32,4.5319e-31,4.0229e-32,3.0235e-30,1.1496e-30,2.715e-31,2.0509e-31,2.9057e-31,5.6152e-31,3.8473e-31,1.3143e-30,6.6292e-31,8.8431e-31,1.1497e-30,1.3465e-30,2.6469e-31,7.2365e-31,5.5724e-31,1.2847e-31,1.7818e-31,8.0164e-31,3.5523e-31,9.0204e-31,3.1725e-32,2.4369e-31,4.7623e-31,1.081e-30,1.8345e-32,1.7859e-30,1.5932e-32,3.4444e-31,1.381e-30,2.2028e-31,3.3015e-31,1.5912e-30,1.031e-30,2.2355e-30,8.5387e-31,1.2754e-30,2.2772e-30,3.6528e-31,4.664e-31,5.3102e-32,1.0508e-30,3.7241e-30,7.2332e-31,2.4852e-31,3.7222e-32,3.2439e-31,4.0027e-31,4.2668e-30,1.275e-30,2.0483e-30,3.9839e-30,6.6454e-31,1.0964e-30,7.8714e-31,3.2951e-31,1.1541e-30,2.2783e-31,5.4891e-30,3.2046e-31,9.5839e-31,1.4171e-30,9.7882e-32,4.3384e-31,2.1183e-30,2.1983e-30,6.052e-31,3.1204e-30,1.9582e-29,1.012e-30,3.6046e-31,6.2093e-31,1.4219e-30,5.7364e-32,1.0661e-31,1.799e-30,4.3237e-31,6.8304e-31,2.297e-30,1.4947e-30,1.9049e-30,2.1008e-32,6.6642e-32,3.2132e-30,1.6686e-30,1.1854e-30,1.8301e-31,2.2999e-31,3.2497e-31,6.3395e-31,2.7555e-31,8.5917e-32,3.5225e-32,9.7166e-33,1.4354e-30,8.3264e-31,1.512e-30,1.9082e-31,2.9615e-30,3.5211e-30,1.0782e-30,3.6675e-31,6.7957e-31,9.5299e-31,6.0349e-31,9.7537e-32,7.9141e-31,1.9364e-30,6.2159e-31,1.381e-30,6.8388e-31,7.6861e-31,1.7299e-30,1.611e-30,1.6422e-30,9.4222e-31,3.9579e-31,1.8252e-30,1.7263e-31,8.6174e-31,1.0043e-30,4.1108e-31,1.9702e-30,4.9705e-31,7.0486e-31,8.1728e-31,1.0108e-31,3.7747e-31,3.3401e-31,4.1489e-31,7.25e-31,5.5677e-31,7.731e-31,1.4913e-30,2.3349e-30,2.9569e-31,1.236e-30,9.9217e-31,3.0669e-31,4.6122e-31,6.3329e-32,1.053e-31,9.2956e-31,2.3642e-31,5.6598e-31,2.2552e-30,6.0395e-31,4.0145e-31,2.6344e-31,1.3121e-30,6.1607e-31,1.2805e-30,2.2824e-30,1.5992e-31,5.234e-31,4.0123e-30,5.7474e-30,5.4854e-31,3.281e-30,9.1543e-31,1.426e-30,1.8784e-30,2.5549e-30,5.4475e-30,2.1071e-30,6.8683e-30,2.0834e-30,7.436e-30,1.089e-31,3.6799e-30,3.7819e-30,1.3244e-30,3.3981e-30,1.8447e-31,1.9999e-30,1.1474e-30,1.6013e-30,1.8977e-30,1.8047e-29,3.4583e-30,4.2629e-30,5.835e-30,3.7597e-31,2.9628e-30,2.0265e-31,1.0312e-30,9.3053e-31,7.9044e-32,1.8716e-31,1.3231e-30,4.9705e-30,2.7972e-30,6.6276e-30,7.0045e-32,3.6893e-30,2.2804e-30,1.6374e-30,1.115e-30,6.0803e-31,6.8561e-31,3.3346e-31,4.5649e-33,7.5383e-31,4.074e-31,6.4994e-31,2.4024e-31,4.2266e-31,4.6341e-31,7.1964e-31,1.3581e-30,3.7037e-30,2.6875e-31,6.1299e-31,1.0434e-30,8.1605e-31,2.2093e-31,5.2259e-31,5.237e-31,8.4552e-31,6.8699e-31,1.7639e-30,8.4249e-31,1.8984e-31,6.7305e-31,3.7841e-31,5.164e-31,7.4653e-32,2.3353e-31,2.0712e-30,3.1809e-31,5.4373e-31,1.8287e-31,1.7405e-30,6.5415e-31,1.4032e-30,2.2656e-31,5.0543e-31,1.3591e-31,2.9204e-31,2.1278e-31,2.4248e-31,5.7783e-32,2.219e-30,9.1494e-31,4.3407e-32,3.7782e-31,1.2202e-30,8.2263e-31,1.4414e-30,2.0595e-31,1.8291e-30,4.3212e-31,3.5166e-31,7.938e-33,1.4757e-30,5.6629e-31,1.2362e-31,5.3354e-31,4.6218e-31,1.8103e-30,1.8384e-31,8.0801e-31,4.2007e-31,1.1536e-30,1.3313e-31,2.2906e-31,1.6014e-31,6.4424e-31,4.6803e-31,2.8509e-31,6.7732e-31,9.1665e-31,4.6398e-30,1.9251e-30,4.2608e-30,5.7772e-31,3.416e-30,8.3095e-31,6.719e-31,8.5049e-31,2.0076e-31,6.174e-31,1.5041e-30,6.3264e-31,5.7503e-31,3.0695e-31,4.2154e-31,1.6594e-31,2.4787e-30,8.5775e-32,3.4149e-31,2.2382e-30,8.8474e-31,6.2761e-31,1.1741e-30,1.7045e-31,5.2846e-31,1.3869e-30,8.0819e-31,2.4151e-30,2.1933e-30,7.7747e-31,3.7764e-30,4.901e-31,2.6587e-30,5.5376e-31,7.9767e-31,2.7787e-30,3.8347e-31,7.349e-31,7.7242e-31,6.6967e-31,3.492e-31,2.6128e-30,1.4893e-30,1.7702e-30,7.0126e-32,1.4796e-30,1.1189e-30,6.8158e-31,4.4799e-32,1.5381e-30,1.9191e-30,3.5667e-32,1.3675e-30,5.4681e-31,4.3072e-31,8.5899e-31,7.5207e-32,7.5629e-32,6.3064e-31,7.9826e-31,7.1438e-31,6.3578e-32,8.2315e-31,2.7014e-31,1.4174e-31,1.0168e-30,1.8014e-30,7.182e-31,8.3293e-32,1.5077e-31,1.7785e-30,4.5953e-32,1.0267e-31,8.4865e-31,2.0191e-30,1.4757e-30,1.3675e-30,1.9599e-30,2.1564e-31,1.775e-30,4.2278e-31,8.7824e-32,6.3087e-31,5.6554e-32,3.6969e-30,2.6734e-32,8.3639e-31,2.2432e-30,1.8924e-30,4.7477e-32,5.7762e-31,2.9555e-30,8.3176e-32,1.3778e-30,2.5052e-30,3.0656e-31,9.1703e-31,5.2367e-31,1.0314e-30,1.1119e-30,2.3261e-31,7.6561e-31,5.9707e-31,1.1763e-30,5.2485e-32,1.7352e-31,3.447e-31,2.0227e-31,1.1315e-30,2.2217e-30,4.678e-31,7.0694e-32,1.0144e-30,1.957e-31,3.5617e-31,8.2218e-31,4.978e-31,1.555e-30,7.4219e-31,6.1308e-32,2.0768e-30,2.5206e-31,9.6164e-31,6.8356e-32,1.9803e-31,3.2659e-31,1.8799e-31,8.339e-31,1.5277e-31,1.3547e-31,2.122e-30,3.1039e-32,4.9961e-31,2.0781e-31,1.0791e-30,1.0635e-30,1.7415e-30,2.0736e-30,1.0737e-30,5.4326e-31,1.9165e-30,7.8022e-31,8.4533e-31,1.5177e-30,6.7806e-30,8.6677e-31,4.095e-30,1.5385e-29,1.4647e-29,8.0133e-30,1.7938e-30,2.9075e-30,7.2513e-30,2.9009e-31,6.9494e-30,6.5994e-30,7.2517e-30,8.5609e-32,1.9737e-30,8.795e-31,2.8822e-32,3.9596e-30,2.4974e-30,1.5256e-30,3.3489e-30,3.1197e-30,6.0679e-31,8.2431e-31,4.343e-30,2.5383e-30,2.3602e-30,3.7442e-30,2.2857e-30,4.7479e-31,2.5042e-30,6.6779e-31,6.8726e-31,8.4901e-32,8.6499e-31,4.6572e-31,3.5916e-30,3.9832e-31,4.6524e-30,1.9708e-30,4.618e-31,3.2301e-31,1.3157e-31,6.0088e-31,1.7904e-30,6.5766e-32,5.6472e-31,2.0488e-31,7.1256e-31,4.833e-31,1.1363e-30,7.2543e-31,5.5215e-31,5.2204e-31,2.3557e-31,3.2237e-31,5.5835e-31,1.3943e-32,7.5734e-31,1.1477e-30,5.4152e-31,1.2202e-30,1.2231e-30,5.9762e-31,1.3967e-31,8.0195e-31,2.4723e-31,8.5441e-31,1.89e-31,1.3144e-31,1.567e-30,6.7926e-31,3.369e-30,3.6351e-30,5.7115e-31,8.168e-32,7.7612e-31,1.9461e-30,4.9938e-31,1.1783e-30,8.1281e-31,2.7137e-31,3.896e-31,5.3959e-32,1.1937e-31,9.8975e-31,1.5108e-31,2.8063e-31,2.0578e-30,2.8609e-31,1.1505e-30,5.8245e-31,4.9404e-31,1.9857e-30,1.2505e-32,6.5486e-31,3.9769e-31,1.397e-30,1.1777e-30,1.8419e-31,2.773e-31,9.2052e-31,9.9099e-31,2.2637e-31,7.6743e-31,1.2511e-31,1.0207e-31,1.036e-30,6.3529e-31,1.7608e-30,1.3503e-30,2.835e-31,5.2343e-31,1.5212e-31,8.9692e-32,2.7542e-31,2.9074e-31,6.061e-31,7.37e-31,1.6197e-31,1.8023e-31,2.0237e-31,1.6644e-31,2.1018e-30,2.4718e-30,2.1817e-30,4.2532e-31,1.7507e-30,2.1992e-30,2.2255e-31,3.8346e-30,3.8983e-30,9.1264e-33,1.7033e-30,1.301e-30,4.8326e-31,6.4756e-31,2.3161e-30,3.3578e-30,2.7187e-30,1.1469e-30,6.2855e-32,1.6594e-31,6.587e-31,1.3265e-30,4.3894e-31,9.2838e-31,1.2897e-30,3.8855e-30,2.0755e-30,2.3338e-30,3.2983e-30,2.1702e-30,2.0623e-30,4.6725e-31,2.1865e-30,8.8271e-31,5.4741e-31,1.2536e-30,3.0458e-31,7.1401e-33,1.0494e-30,2.2232e-30,6.263e-31,6.5504e-32,4.3957e-32,4.6087e-32,1.3772e-31,2.8591e-31,4.8982e-31,8.9824e-31,2.3889e-31,3.1514e-32,2.1425e-31,8.6655e-31,4.1322e-31,2.9608e-31,6.2471e-31,8.4118e-32,4.3872e-31,1.7637e-30,2.8433e-30,1.4442e-30,4.2583e-31,2.4616e-31,1.7897e-30,1.0142e-30,8.1013e-31,5.4375e-30,9.3777e-31,4.4054e-31,1.305e-31,1.4974e-30,1.335e-31,4.488e-31,7.9259e-31,1.4861e-30,7.0875e-31,9.8055e-31,9.2313e-31,1.3528e-30,1.292e-31,1.1243e-30,1.1223e-30,1.1551e-30,4.4553e-31,1.9525e-30,7.8518e-31,1.5447e-31,6.5775e-31,3.4224e-31,1.1657e-30,9.797e-31,5.8989e-31,7.4961e-31,2.5406e-30,6.3184e-31,1.1885e-30,6.029e-31,1.2934e-30,8.3087e-32,8.0613e-31,3.7579e-31,3.6675e-31,7.2084e-31,4.8726e-31,1.4656e-31,2.6771e-31,2.7279e-31,3.2125e-30,6.322e-31,1.5183e-30,2.6605e-30,1.7025e-30,3.4475e-31,6.3725e-31,1.4175e-30,2.2362e-31,2.2123e-30,1.638e-30,1.2816e-30,7.8311e-31,1.8503e-30,2.2207e-30,8.632e-31,1.3156e-31,3.8361e-30,9.5952e-31,1.6604e-31,8.6308e-31,4.2684e-31,2.0828e-30,4.6578e-31,4.4185e-30,4.1573e-30,9.5715e-31,1.1744e-32,7.7802e-31,2.1021e-30,1.0733e-30,5.8559e-31,7.2909e-30,1.0729e-29,2.4335e-30,4.4574e-31,1.3071e-30,4.1049e-31,2.0288e-31,4.7052e-30,5.5391e-31,1.6169e-30,1.9162e-30,5.0748e-30,5.9853e-30,1.7457e-30,2.1275e-30,3.1554e-30,4.0812e-30,1.1696e-30,5.772e-31,2.187e-30,5.2679e-30,2.3299e-30,1.8587e-31,4.1879e-30,2.3999e-30,3.7785e-30,5.655e-31,2.3486e-31,5.2311e-30,4.6035e-31,2.6042e-30,1.5511e-30,4.1053e-31,5.3831e-31,3.0299e-31,7.9706e-31,1.5955e-30,1.121e-30,1.9145e-31,4.0294e-31,4.796e-31,5.3904e-31,1.7551e-30,4.9483e-31,4.0539e-31,7.4173e-31,2.4211e-31,1.2408e-31,1.2586e-30,1.6631e-30,1.6932e-30,1.9331e-31,2.7333e-31,1.2062e-31,2.4362e-30,2.9041e-30,1.3742e-32,1.2764e-30,4.444e-31,6.75e-31,1.9393e-31,1.0392e-30,3.4898e-31,4.9333e-32,5.6916e-31,1.5542e-31,1.4378e-31,8.4309e-31,2.5888e-31,9.9778e-31,4.0525e-32,2.3063e-30,1.3722e-30,2.6475e-30,1.4678e-31,2.1055e-30,2.5967e-30,4.1413e-32,1.8511e-31,1.452e-30,3.0091e-31,7.2654e-32,8.1554e-32,1.2578e-31,3.6666e-30,1.865e-31,9.5062e-32,1.1489e-30,1.0398e-30,1.6119e-30,5.5743e-31,4.7474e-31,5.0798e-31,2.9372e-31,3.0289e-31,1.1083e-32,2.1978e-31,1.3131e-31,1.7641e-31,5.0893e-31,1.3691e-30,5.2892e-31,1.3408e-30,7.063e-31,2.0504e-31,8.0453e-31,7.1088e-31,4.0839e-31,9.5005e-31,8.1972e-31,3.4825e-30,4.0076e-31,9.7317e-32,3.2215e-31,2.757e-30,2.5906e-31,9.1242e-31,3.0874e-30,9.5925e-31,5.1049e-30,1.253e-30,1.8322e-30,1.0071e-31,4.9094e-31,6.6571e-31,2.0348e-31,2.5772e-31,3.6528e-31,4.7161e-30,1.1221e-30,2.129e-31,5.2622e-31,2.227e-30,3.7515e-31,4.7427e-31,1.7816e-30,4.082e-31,5.8322e-32,7.0725e-31,4.3045e-31,2.2882e-30,1.3999e-31,2.1703e-30,1.8362e-31,1.1382e-31,1.0278e-30,3.6126e-30,7.4972e-31,1.3414e-30,1.9866e-31,2.2444e-30,3.3309e-30,9.3612e-31,1.9621e-30,2.2235e-30,5.0867e-31,1.9592e-31,5.7657e-31,3.3643e-31,2.1756e-31,1.5493e-30,6.9407e-31,2.7538e-31,4.5779e-31,1.28e-30,7.9444e-32,3.1235e-31,2.3559e-31,1.3237e-30,1.0222e-31,4.8552e-33,5.1424e-32,5.8854e-31,4.4762e-31,1.8171e-30,2.5219e-31,4.2607e-32,2.4066e-30,2.7009e-31,2.1081e-30,7.4466e-32,1.5363e-30,2.8949e-31,2.5373e-31,1.15e-30,7.2615e-31,2.9195e-30,1.5167e-30,1.4914e-30,2.6481e-31,9.2807e-32,2.1142e-31,1.1711e-31,2.569e-30,9.055e-31,4.184e-31,1.5047e-31,3.9952e-31,1.0807e-31,1.1377e-30,4.4962e-31,6.4139e-31,5.2378e-31,4.4363e-31,1.0096e-31,1.3193e-30,1.0007e-30,1.7847e-32,1.5668e-30,3.2237e-31,1.1447e-31,7.8165e-31,6.0178e-31,2.6063e-30,2.1684e-31,1.0289e-30,1.9411e-30,7.3571e-31,4.1546e-31,8.3745e-32,2.6883e-31,1.5796e-30,1.1568e-30,2.0568e-30,1.0272e-30,2.4804e-31,3.7847e-31,3.8699e-31,2.208e-31,2.2323e-31,1.2627e-30,1.0491e-30,3.8168e-31,1.1352e-30,8.9762e-31,9.6738e-33,7.7809e-31,7.1951e-31,2.8389e-32,2.5894e-30,4.7454e-31,1.836e-30,2.9985e-30,2.7654e-30,2.3077e-30,6.7233e-30,7.9568e-30,8.2584e-30,1.1393e-29,5.3968e-30,2.872e-29,1.9652e-29,6.0846e-29,5.508e-29,8.4775e-29,9.3407e-29,1.3e-28,2.1163e-28,2.2564e-28,2.7955e-28,4.3687e-28,5.2558e-28,7.4566e-28,1.1058e-27,1.3486e-27,1.8694e-27,2.4628e-27,3.361e-27,4.5546e-27,6.1753e-27,8.835e-27,1.1473e-26,1.5634e-26,2.0911e-26,2.845e-26,3.8597e-26,5.2704e-26,6.994e-26,9.5115e-26,1.2787e-25,1.7457e-25,2.3313e-25,3.1632e-25,4.2626e-25,5.7529e-25,7.75e-25,1.0472e-24,1.4114e-24,1.9016e-24,2.5626e-24,3.4529e-24,4.6531e-24,6.2683e-24,8.4395e-24,1.1362e-23,1.529e-23,2.0579e-23,2.7676e-23,3.7231e-23,5.0071e-23,6.7328e-23,9.0534e-23,1.2165e-22,1.6346e-22,2.196e-22,2.9496e-22,3.9611e-22,5.3184e-22,7.1393e-22,9.5817e-22,1.2857e-21,1.7249e-21,2.3137e-21,3.1026e-21,4.1597e-21,5.5759e-21,7.4725e-21,1.0012e-20,1.3412e-20,1.7962e-20,2.4052e-20,3.2198e-20,4.3093e-20,5.7661e-20,7.7137e-20,1.0317e-19,1.3794e-19,1.844e-19,2.4644e-19,3.2926e-19,4.3981e-19,5.8732e-19,7.8409e-19,1.0465e-18,1.3963e-18,1.8625e-18,2.4837e-18,3.3111e-18,4.4127e-18,5.8791e-18,7.8302e-18,1.0426e-17,1.3877e-17,1.8465e-17,2.4561e-17,3.2659e-17,4.3413e-17,5.7687e-17,7.6628e-17,1.0175e-16,1.3507e-16,1.7923e-16,2.3774e-16,3.1525e-16,4.1786e-16,5.5368e-16,7.3339e-16,9.7106e-16,1.2853e-15,1.7006e-15,2.2493e-15,2.9739e-15,3.9306e-15,5.1932e-15,6.8589e-15,9.0558e-15,1.1952e-14,1.577e-14,2.0799e-14,2.7424e-14,3.6147e-14,4.7628e-14,6.2737e-14,8.2613e-14,1.0875e-13,1.4312e-13,1.8829e-13,2.4765e-13,3.2562e-13,4.2803e-13,5.6248e-13,7.3898e-13,9.7059e-13,1.2745e-12,1.673e-12,2.1957e-12,2.8809e-12,3.779e-12,4.9558e-12,6.4974e-12,8.5164e-12,1.116e-11,1.462e-11,1.9148e-11,2.5072e-11,3.282e-11,4.295e-11,5.6191e-11,7.3491e-11,9.6089e-11,1.256e-10,1.6411e-10,2.1436e-10,2.7989e-10,3.6532e-10,4.7665e-10,6.2164e-10,8.104e-10,1.056e-09,1.3754e-09,1.7906e-09,2.3298e-09,3.03e-09,3.9383e-09,5.1161e-09,6.6422e-09,8.6183e-09,1.1175e-08,1.4481e-08,1.8752e-08,2.4267e-08,3.138e-08,4.0549e-08,5.2357e-08,6.755e-08,8.7084e-08,1.1218e-07,1.4438e-07,1.8567e-07,2.3857e-07,3.0628e-07,3.9285e-07,5.0347e-07,6.4466e-07,8.2471e-07,1.0541e-06,1.3462e-06,1.7177e-06,2.1897e-06,2.7892e-06,3.5499e-06,4.5144e-06,5.7365e-06,7.2838e-06,9.242e-06,1.1719e-05,1.485e-05,1.8806e-05,2.3803e-05,3.0114e-05,3.8082e-05,4.8141e-05,6.0838e-05,7.6864e-05,9.7095e-05,0.00012263,0.00015488,0.0001956,0.00024702,0.00031198,0.00039405,0.00049773,0.00062871,0.00079414,0.001003,0.0012664,0.0015983,0.0020159,0.0025399,0.0031958,0.0040141,0.005031,0.0062888,0.0078369,0.0097313,0.012035,0.014819,0.018159,0.022137,0.026839,0.032353,0.038767,0.046167,0.054633,0.064237,0.075039,0.087087,0.10041,0.11501,0.13088,0.14798,0.16626,0.18562,0.20596,0.22715,0.24905,0.2715,0.29433,0.31735,0.3404,0.36329,0.38586,0.40793,0.42937,0.45004,0.46981,0.4886,0.5063,0.52286,0.53821,0.55231,0.56512,0.57663,0.58681,0.59564,0.60313,0.60926,0.61403,0.61744,0.61949,0.62017,0.61949,0.61744,0.61403,0.60926,0.60313,0.59564,0.58681,0.57663,0.56512,0.55231,0.53821,0.52286,0.5063,0.4886,0.46981,0.45004,0.42937,0.40793,0.38586,0.36329,0.3404,0.31735,0.29433,0.2715,0.24905,0.22715,0.20596,0.18562,0.16626,0.14798,0.13088,0.11501,0.10041,0.087087,0.075039,0.064237,0.054633,0.046167,0.038767,0.032353,0.026839,0.022137,0.018159,0.014819,0.012035,0.0097313,0.0078369,0.0062888,0.005031,0.0040141,0.0031958,0.0025399,0.0020159,0.0015983,0.0012664,0.001003,0.00079414,0.00062871,0.00049773,0.00039405,0.00031198,0.00024702,0.0001956,0.00015488,0.00012263,9.7095e-05,7.6864e-05,6.0838e-05,4.8141e-05,3.8082e-05,3.0114e-05,2.3803e-05,1.8806e-05,1.485e-05,1.1719e-05,9.242e-06,7.2838e-06,5.7365e-06,4.5144e-06,3.5499e-06,2.7892e-06,2.1897e-06,1.7177e-06,1.3462e-06,1.0541e-06,8.2471e-07,6.4466e-07,5.0347e-07,3.9285e-07,3.0628e-07,2.3857e-07,1.8567e-07,1.4438e-07,1.1218e-07,8.7084e-08,6.755e-08,5.2357e-08,4.0549e-08,3.138e-08,2.4267e-08,1.8752e-08,1.4481e-08,1.1175e-08,8.6183e-09,6.6422e-09,5.1161e-09,3.9383e-09,3.03e-09,2.3298e-09,1.7906e-09,1.3754e-09,1.056e-09,8.104e-10,6.2164e-10,4.7665e-10,3.6532e-10,2.7989e-10,2.1436e-10,1.6411e-10,1.256e-10,9.6089e-11,7.3491e-11,5.6191e-11,4.295e-11,3.282e-11,2.5072e-11,1.9148e-11,1.462e-11,1.116e-11,8.5164e-12,6.4974e-12,4.9558e-12,3.779e-12,2.8809e-12,2.1957e-12,1.673e-12,1.2745e-12,9.7059e-13,7.3898e-13,5.6248e-13,4.2803e-13,3.2562e-13,2.4765e-13,1.8829e-13,1.4312e-13,1.0875e-13,8.2613e-14,6.2737e-14,4.7628e-14,3.6147e-14,2.7424e-14,2.0799e-14,1.577e-14,1.1952e-14,9.0558e-15,6.8589e-15,5.1932e-15,3.9306e-15,2.9739e-15,2.2493e-15,1.7006e-15,1.2853e-15,9.7106e-16,7.3339e-16,5.5368e-16,4.1786e-16,3.1525e-16,2.3774e-16,1.7923e-16,1.3507e-16,1.0175e-16,7.6628e-17,5.7687e-17,4.3413e-17,3.2659e-17,2.4561e-17,1.8465e-17,1.3877e-17,1.0426e-17,7.8302e-18,5.8791e-18,4.4127e-18,3.3111e-18,2.4837e-18,1.8625e-18,1.3963e-18,1.0465e-18,7.8409e-19,5.8732e-19,4.3981e-19,3.2927e-19,2.4644e-19,1.844e-19,1.3794e-19,1.0317e-19,7.7137e-20,5.7661e-20,4.3093e-20,3.2198e-20,2.4052e-20,1.7963e-20,1.3412e-20,1.0012e-20,7.4727e-21,5.5758e-21,4.1596e-21,3.1025e-21,2.3137e-21,1.7249e-21,1.2858e-21,9.5823e-22,7.1392e-22,5.3187e-22,3.9615e-22,2.9495e-22,2.196e-22,1.6346e-22,1.2166e-22,9.0516e-23,6.7335e-23,5.0082e-23,3.7225e-23,2.7684e-23,2.0584e-23,1.529e-23,1.1358e-23,8.4504e-24,6.2759e-24,4.6457e-24,3.4477e-24,2.5657e-24,1.9023e-24,1.4076e-24,1.046e-24,7.7722e-25,5.7219e-25,4.2734e-25,3.1579e-25,2.3323e-25,1.7327e-25,1.2809e-25,9.4585e-26,7.1872e-26,5.304e-26,4.0096e-26,2.866e-26,2.0872e-26,1.5046e-26,1.1452e-26,8.3542e-27,5.9977e-27,5.0321e-27,3.6564e-27,2.8278e-27,2.0214e-27,1.3444e-27,9.2153e-28,7.1208e-28,5.0388e-28,4.5722e-28,3.3397e-28,2.4602e-28,1.4851e-28,1.5003e-28,1.2045e-28,4.5529e-29,3.3944e-29,3.4571e-29,2.2741e-29,2.6508e-29,1.4342e-29,1.6454e-29,6.0601e-30,1.0023e-29,8.8967e-30,1.2857e-29,2.7999e-30,1.017e-30,1.2213e-30,2.384e-30,2.0102e-30,7.0582e-31,1.3477e-30,3.9856e-31,3.2329e-30,4.2789e-31,3.1309e-31,2.4945e-31,3.7938e-32,2.4603e-31,6.9309e-31,6.1822e-32,7.4053e-31,3.5702e-31,1.2241e-30,7.6369e-31,2.2669e-31,9.3214e-32,4.616e-32,5.6383e-31,1.1333e-30,2.1716e-30,6.0078e-31,1.984e-31,1.4187e-31,4.229e-31,8.0967e-31,3.7606e-31,3.2633e-30,8.5733e-31,3.3903e-31,1.3183e-31,1.1229e-30,7.2881e-31,3.6789e-31,2.7976e-31,3.1559e-31,7.3138e-31,2.2499e-30,1.6377e-31,3.3373e-32,1.0894e-31,5.9847e-32,1.2804e-31,3.0155e-33,1.2914e-30,2.2722e-32,1.8362e-30,4.7314e-31,4.3523e-31,1.7506e-30,4.6321e-31,5.8399e-32,7.2584e-31,8.3055e-31,6.6014e-31,1.163e-30,1.436e-30,4.73e-31,9.7607e-33,6.1045e-31,8.0192e-31,2.7755e-31,4.2293e-31,2.5135e-31,6.3372e-32,3.0497e-31,9.0917e-31,1.1197e-30,1.1837e-30,7.2957e-32,2.7531e-31,2.5079e-31,2.015e-31,3.2109e-31,1.8769e-30,4.9703e-31,7.9385e-31,2.4233e-31,1.1722e-30,1.2274e-30,2.0129e-31,7.4412e-31,1.1038e-30,5.7614e-31,2.4701e-31,1.851e-30,1.5416e-30,3.7347e-31,4.4163e-31,3.7001e-31,9.8818e-31,2.1265e-30,1.3262e-31,4.5393e-31,1.1247e-30,2.997e-30,1.7885e-30,1.9239e-30,1.0791e-30,3.856e-31,4.1172e-31,1.1504e-30,4.692e-32,1.7478e-30,1.4174e-30,1.5801e-30,4.2807e-30,2.4613e-31,2.7751e-30,9.6357e-32,6.2809e-30,1.8536e-30,2.5754e-30,2.737e-30,1.8368e-30,9.0279e-31,1.0599e-30,7.7716e-32,2.1441e-31,1.8262e-31,6.9222e-31,7.1412e-31,5.717e-31,3.3229e-31,5.8154e-31,6.9031e-31,9.0411e-31,3.1193e-30,1.4232e-30,3.9906e-31,3.4784e-31,2.0436e-31,1.3926e-31,1.9644e-31,2.8892e-30,5.3612e-31,8.8517e-31,3.6564e-30,6.5699e-32,9.477e-31,9.0448e-31,9.0625e-32,2.3166e-31,1.0348e-30,3.6062e-30,1.9192e-30,1.6489e-31,2.8044e-31,8.088e-32,5.7851e-31,1.4516e-30,1.2106e-30,2.3278e-30,1.0645e-31,9.9206e-31,1.9126e-30,8.6826e-31,2.5824e-31,1.5625e-30,4.8692e-31,3.9048e-31,1.2923e-31,4.2174e-31,4.9063e-31,1.2578e-30,4.461e-31,1.8935e-31,1.4137e-30,8.4808e-32,4.5963e-31,5.5204e-31,9.1011e-31,1.9573e-31,2.8981e-31,8.097e-31,1.151e-30,1.4998e-30,7.0039e-32,4.213e-31,1.5143e-30,8.0468e-31,4.586e-31,4.4485e-31,6.635e-31,8.4817e-31,3.0056e-31,4.7925e-31,8.9512e-31,1.5272e-30,1.962e-31,3.4624e-31,6.5694e-32,6.3237e-31,7.7784e-31,1.108e-30,6.9852e-31,5.555e-31,9.479e-32,1.9217e-30,7.5107e-31,3.2296e-30,1.6325e-30,5.5641e-31,5.1912e-31,5.8e-31,5.4854e-31,2.6379e-31,5.7877e-31,2.5302e-31,1.2481e-30,1.6614e-30,6.9222e-31,6.9818e-33,5.7657e-30,3.3248e-31,6.5629e-31,4.2762e-30,3.0945e-30,5.8266e-30,4.1275e-30,2.7421e-30,5.2161e-30,5.3449e-30,2.3344e-32,7.1094e-30,8.1319e-31,3.5941e-31,3.5262e-31,7.8424e-31,5.7514e-31,3.9733e-31,1.3255e-30,5.2778e-30,4.917e-30,5.33e-30,2.7157e-30,3.3696e-30,5.9654e-30,7.5971e-30,1.4393e-30,2.1429e-30,2.6403e-30,6.5155e-31,1.9281e-30,2.2661e-31,2.268e-30,1.6653e-30,4.0283e-31,1.3058e-30,3.4475e-30,9.682e-31,8.8465e-31,3.2156e-31,2.9801e-31,3.9481e-31,1.7889e-30,2.2231e-30,6.8423e-31,1.3137e-30,1.1966e-30,3.9939e-31,9.5207e-31,2.7703e-31,1.2384e-31,4.9103e-31,5.1121e-32,2.7009e-31,2.1535e-30,1.4715e-30,3.5675e-31,2.1378e-30,2.1396e-31,9.6423e-31,5.2185e-30,4.5047e-31,1.3309e-31,6.9764e-31,3.3138e-31,1.5939e-30,6.8397e-31,8.3266e-31,1.3145e-30,2.3729e-31,9.5421e-32,3.8081e-32,1.9602e-30,1.342e-30,7.1233e-31,8.0542e-31,4.7722e-31,1.5651e-30,4.5322e-31,8.1318e-32,6.3994e-32,1.0284e-30,2.048e-31,1.3268e-30,6.5226e-31,1.1469e-30,7.0999e-31,2.1237e-30,2.3839e-30,3.3814e-31,2.1943e-30,3.2111e-31,1.5706e-30,3.2492e-30,4.252e-31,1.3381e-30,6.1598e-31,1.163e-32,4.7487e-31,6.4568e-32,1.0486e-30,9.0023e-31,2.344e-30,5.3974e-31,2.567e-31,1.3267e-32,7.4144e-31,8.6642e-32,3.2727e-31,1.7229e-30,7.8413e-32,1.988e-30,1.7372e-30,4.5396e-31,1.3021e-30,1.2827e-30,8.8397e-31,1.2112e-30,1.5864e-30,1.2712e-31,1.1364e-30,2.0147e-31,3.2393e-31,9.3085e-31,1.1846e-30,3.4672e-31,6.5372e-32,1.7797e-33,1.053e-31,2.3534e-31,3.6527e-31,9.0327e-31,9.6695e-31,8.502e-31,1.6839e-30,4.4573e-31,1.5587e-30,1.3959e-30,5.0201e-31,2.9288e-31,2.3039e-31,1.1575e-30,2.7254e-30,2.3402e-30,1.3236e-30,2.9641e-31,1.7792e-31,7.1628e-31,4.7409e-32,1.2718e-30,1.0041e-30,2.0033e-30,3.2025e-30,2.4905e-31,4.7629e-31,1.1299e-30,1.0708e-32,1.4342e-31,1.7051e-30,1.2154e-30,2.8271e-31,7.23e-31,1.4549e-30,2.9251e-31,4.5557e-32,1.2476e-30,2.6366e-32,8.8175e-31,3.2719e-31,1.7189e-31,7.6314e-31,1.2146e-30,7.1409e-31,1.5208e-32,1.146e-30,1.0506e-30,6.1098e-32,3.7693e-31,1.5238e-30,7.9122e-31,2.5104e-30,1.0481e-30,9.8569e-31,5.953e-31,8.7225e-31,1.4312e-30,3.8438e-31,1.8275e-30,2.3202e-31,1.8424e-32,4.5297e-31,9.0041e-32,7.489e-33,1.3742e-30,7.4936e-31,2.6428e-31,3.4182e-30,4.7031e-31,7.3259e-32,4.3218e-31,4.8149e-31,4.8652e-32,2.8195e-32,2.6654e-32,1.0356e-31,1.1246e-30,9.3918e-31,6.5106e-32,5.6868e-32,1.6737e-31,6.6999e-31,1.05e-30,1.0353e-30,7.473e-32,1.1563e-31,1.8956e-30,1.159e-31,4.3937e-31,9.1537e-31,8.2242e-31,2.2757e-31,4.536e-31,1.1375e-30,5.1482e-31,6.4991e-32,9.5895e-31,6.4265e-31,2.6477e-30,2.9431e-31,1.2459e-30,1.1778e-30,1.531e-30,2.4079e-31,7.3565e-31,6.7283e-31,3.4585e-31,1.7986e-31,1.209e-31,8.5676e-31,1.7638e-31,6.0088e-31,2.1657e-30,7.3746e-31,7.2091e-31,1.4327e-30,5.9641e-31,1.8174e-30,2.0841e-30,3.2224e-30,9.8447e-31,8.2545e-31,2.3384e-30,3.411e-31,1.0084e-31,5.0147e-31,1.4591e-30,2.0061e-30,4.2188e-31,6.7357e-31,2.0132e-31,2.0828e-30,1.1955e-31,4.2848e-31,7.9339e-32,8.5216e-30,4.6093e-31,3.3481e-31,3.4292e-30,1.6676e-31,1.0476e-30,4.719e-31,1.75e-30,5.7425e-30,4.4681e-31,3.1356e-31,4.4946e-30,6.4274e-31,1.2928e-31,1.3659e-30,7.2887e-31,6.0988e-30,1.6362e-31,2.304e-30,1.3697e-30,4.6227e-32,1.126e-31,3.5557e-30,2.7883e-31,3.3881e-31,1.1658e-30,1.1236e-30,1.2548e-30,4.9675e-32,1.5727e-30,3.5397e-31,6.0518e-31,1.0439e-30,2.8507e-31,7.1281e-31,5.9908e-31,3.3986e-31,9.5017e-32,1.0303e-31,2.053e-30,1.2588e-30,1.6255e-31,2.6525e-30,2.7096e-31,2.4279e-30,5.2866e-31,1.941e-32,2.3536e-31,3.903e-31,1.1616e-30,2.0036e-31,4.2498e-32,1.0495e-30,2.3026e-31,2.9305e-31,8.1124e-31,2.7113e-31,2.3554e-30,1.0507e-31,2.0723e-30,6.886e-31,1.193e-30,5.6102e-31,2.3682e-31,6.7166e-31,3.1072e-31,9.4523e-31,4.2381e-31,5.1208e-31,9.2053e-31,9.197e-31,1.2077e-30,9.6435e-31,8.0003e-31,2.088e-32,5.0089e-31,1.9995e-31,3.4448e-31,2.6945e-31,4.3887e-31,1.1183e-30,2.559e-30,1.9972e-30,9.3179e-32,5.7709e-31,3.1304e-30,1.1262e-31,1.2344e-30,1.2456e-30,3.1091e-31,9.4012e-31,2.2068e-30,6.8058e-31,4.2818e-32,1.1435e-30,1.8035e-31,2.4987e-31,2.4781e-31,9.623e-33,1.0504e-30,1.0195e-30,7.0014e-31,1.6979e-32,1.2587e-30,3.2514e-31,6.8655e-31,1.1626e-30,5.3858e-31,6.7992e-31,1.9562e-31,1.1117e-30,2.8127e-32,1.6714e-30,1.0976e-31,1.7477e-30,2.6426e-31,1.4248e-30,1.3172e-32,1.7938e-30,3.8223e-31,7.3764e-31,5.5939e-31,4.1186e-32,6.8985e-31,1.1648e-30,7.8152e-31,2.7028e-30,3.0777e-30,1.717e-30,4.0288e-30,3.5981e-30,1.3943e-30,1.224e-30,4.4437e-32,4.6591e-31,5.6851e-31,1.6498e-31,2.3598e-30,1.03e-30,1.8895e-30,1.7509e-31,3.9656e-31,8.1313e-31,2.7198e-30,3.8985e-30,3.4953e-30,2.0455e-30,5.6224e-31,4.1434e-30,1.523e-30,9.2142e-31,1.4519e-30,1.0603e-30,7.2188e-31,1.1831e-30,6.3949e-31,6.981e-31,4.7667e-31,1.1561e-30,9.9515e-32,1.4377e-30,8.4125e-32,8.8959e-31,1.2924e-30,1.2037e-30,1.0056e-30,1.7984e-31,9.3925e-31,7.6109e-31,1.3973e-30,4.5758e-31,2.5009e-30,5.0539e-31,3.5848e-31,6.7788e-32,5.9155e-32,2.5297e-30,9.3164e-31,1.8802e-30,7.8876e-31,3.3481e-33,7.5478e-31,3.5835e-31,1.0633e-30,4.4141e-31,1.1444e-30,1.7374e-30,1.0248e-30,1.4165e-30,4.2349e-30,1.1335e-31,9.0378e-31,1.3485e-31,1.1781e-30,5.7698e-31,2.0321e-30,9.995e-31,1.319e-30,3.8082e-31,1.0404e-31,1.4707e-31,3.9157e-31,4.8809e-31,7.9887e-31,1.2507e-30,1.3926e-32,2.8262e-30,1.2643e-30,6.8754e-31,2.8922e-30,1.2561e-32,1.1112e-30,9.2306e-31,1.1345e-30,5.4583e-31,5.0875e-32,5.7364e-31,1.9409e-31,1.9902e-30,1.5429e-30,1.6597e-30,5.4233e-31,7.949e-31,1.2765e-30,2.129e-31,6.323e-31,3.349e-30,3.7052e-31,1.9033e-30,1.222e-30,6.1321e-31,2.662e-31,4.1759e-31,2.0341e-31,1.1289e-31,1.2772e-30,1.2057e-30,7.867e-32,4.6102e-31,1.9623e-30,1.6423e-30,5.745e-31,2.7498e-31,4.4977e-30,5.5826e-31,5.8109e-31,3.1889e-30,2.472e-31,4.1917e-31,1.3669e-30,1.2264e-30,3.1347e-31,2.57e-30,3.9791e-30,1.3935e-30,1.225e-30,3.5206e-30,1.6502e-30,1.4835e-29,4.3079e-30,1.4302e-30,3.5872e-31,3.8164e-30,1.7334e-31,1.1354e-29,1.4764e-30,3.0716e-30,5.0981e-31,2.5395e-30,2.0029e-29,6.1173e-30,6.3367e-30,5.1609e-30,1.0504e-30,2.3193e-30,2.9245e-30,1.4757e-31,3.1984e-30,1.0329e-30,6.8441e-30,8.6007e-31,1.0003e-29,8.8035e-31,4.9788e-30,1.8374e-30,4.1249e-31,1.4742e-30,2.6402e-31,1.2938e-30,1.2851e-30,3.1288e-31,4.6923e-31,5.6814e-31,1.6898e-30,8.4378e-31,9.8332e-31,3.5299e-31,5.0635e-31,2.5842e-30,1.0607e-30,7.9298e-31,1.9771e-30,2.0525e-30,4.7688e-32,7.881e-31,1.9287e-31,1.8792e-31,6.3207e-31,9.8881e-32,3.4013e-31,4.6982e-31,4.4e-31,1.1724e-30,2.8768e-31,1.096e-30,3.3659e-30,1.0118e-32,4.2133e-31,2.1718e-32,7.3402e-32,2.3003e-31,1.2279e-30,5.1661e-31,4.1328e-32,5.6191e-31,9.3866e-32,3.4114e-31,5.5703e-31,9.7521e-31,3.7871e-31,3.3187e-31,7.6603e-31,1.433e-30,1.2815e-30,1.7722e-31,1.9914e-31,1.4118e-30,2.2411e-31,1.1006e-30,1.2976e-30,9.3596e-32,5.2629e-31,7.1787e-31,2.5031e-30,5.9656e-31,2.8528e-30,7.9287e-31,1.6005e-31,6.9832e-31,1.0101e-30,1.1001e-30,8.2912e-32,2.016e-31,2.9989e-31,5.8349e-31,2.3445e-31,4.0269e-30,1.2977e-30,1.8479e-30,3.0679e-31,1.4283e-30,7.4155e-31,9.8249e-34,7.5352e-32,1.0431e-30,1.7369e-31,8.4066e-31,8.6686e-32,1.3907e-30,3.1778e-30,1.0802e-29,1.6079e-30,1.4557e-30,3.3056e-30,5.5865e-31,7.4179e-32,1.5501e-30,2.1852e-30,1.1882e-31,3.7863e-31,1.6952e-30,8.2114e-32,2.0944e-30,2.6426e-32,1.4549e-30,1.8913e-31,5.1316e-31,1.883e-30,2.2192e-30,1.4206e-30,2.3188e-30,1.3807e-31,1.792e-31,2.1275e-30,2.4072e-30,7.383e-31,1.6319e-30,4.0473e-30,7.3628e-31,7.3357e-31,5.0335e-30,7.1349e-32,5.412e-31,1.6982e-30,1.0715e-30,1.1989e-30,1.9581e-31,4.5814e-31,5.7176e-31,1.161e-31,2.7408e-30,7.5969e-32,1.2925e-30,2.0741e-31,2.0431e-32,4.7127e-31,3.7566e-30,2.2277e-31,3.5469e-31,3.8998e-30,3.3642e-31,1.0931e-30,7.4697e-32,3.2738e-30,1.8329e-30,1.2352e-30,1.3359e-31,5.4474e-31,7.3709e-31,8.5543e-31,4.3253e-31,8.1437e-31,1.3723e-30,4.1688e-32,1.9694e-31,8.5432e-32,3.8147e-30,4.8174e-32,3.9119e-31,4.5649e-31,9.8175e-31,1.5634e-30,2.5078e-31,8.6662e-32,1.9385e-30,2.7752e-31,3.9549e-31,1.0423e-30,1.3525e-31,2.6264e-30,2.2573e-30,7.4911e-31,5.1879e-31,9.7203e-31,1.4674e-30,2.715e-31,6.285e-31,6.9255e-31,1.2759e-30,7.1914e-31,4.2002e-31,1.8498e-31,1.9213e-30,4.1804e-31,9.8419e-31,3.7234e-31,1.0011e-31,1.1108e-30,1.4359e-30,8.333e-32,9.8105e-31,2.4517e-31,4.2957e-32,6.3789e-31,1.748e-30,9.0841e-31,4.3472e-32,4.4232e-31,1.0523e-30,8.3936e-32,6.1588e-31,8.2954e-31,2.2905e-31,3.575e-31,1.9458e-30,1.3691e-31,4.9886e-31,6.1458e-31,2.7466e-31,4.0419e-31,2.2855e-30,2.1725e-30,8.3453e-31,4.4588e-31,1.3454e-30,1.9426e-30,8.895e-31,2.0123e-31,5.157e-31,8.9046e-31,1.644e-30,1.0885e-30,1.175e-30,3.6558e-30,7.6999e-31,1.0065e-30,8.3934e-30,1.2567e-30,5.6127e-31,2.585e-30,4.9578e-31,2.675e-30,8.7784e-30,1.1093e-30,2.954e-30,1.2841e-29,3.8706e-30,3.6236e-30,8.117e-30,5.2994e-31,2.2201e-30,2.3722e-30,5.4078e-31,2.6792e-30,2.1893e-30,4.2877e-31,4.8627e-30,6.8585e-31,1.2673e-30,4.7717e-31,1.8336e-30,4.3411e-31,8.5093e-31,2.446e-30,9.9102e-31,4.8953e-32,1.4549e-30,1.2971e-30,1.4017e-30,1.7549e-30,3.9758e-31,2.1383e-30,5.6585e-32,1.5696e-31,9.4532e-31,8.7863e-31,1.0448e-30,1.2948e-30,1.2974e-30,3.4105e-31,6.139e-31,1.1645e-30,2.7259e-32,2.3577e-31,1.2074e-30,9.7758e-32,8.5185e-31,7.9775e-31,2.9399e-31,9.5128e-31,9.6093e-32,2.2328e-30,2.5982e-30,7.6985e-31,7.2413e-31,9.6279e-32,2.6711e-31,6.1039e-31,1.7373e-31,1.3015e-31,1.0468e-30,9.908e-31,1.5828e-31,2.4036e-30,6.0849e-31,5.3409e-31,7.1087e-31,3.2858e-30,4.1375e-31,5.1538e-31,1.5859e-31,7.2725e-31,1.8757e-30,1.3583e-31,2.8623e-30,9.2477e-31,5.1174e-33,9.0161e-31,3.9272e-31,1.3648e-30,1.2943e-30,1.2545e-31,1.9825e-30,3.0069e-30,1.4026e-31,4.375e-30,1.1405e-30,5.9622e-31,1.3641e-30,5.4715e-31,1.3492e-30,1.0572e-30,6.3671e-31,1.1688e-30,9.8528e-31,1.505e-31,4.3493e-32,3.0114e-31,5.1777e-31,1.3788e-30,3.6823e-31,6.2194e-31,4.0046e-31,9.7946e-31,7.7641e-32,1.2075e-31,6.9314e-31,5.4308e-31,8.093e-31,2.3436e-30,3.3446e-31,1.2532e-30,1.4323e-30,3.9709e-31,3.5331e-31,1.4051e-30,8.4858e-31,7.4079e-31,2.5343e-31,6.601e-32,2.6625e-30,2.5044e-30,1.8306e-31,1.3308e-31,1.7785e-30,4.0022e-32,4.2005e-31,1.0634e-31,3.8566e-30,1.2731e-30,1.8972e-30,2.5506e-31,4.2763e-31,2.5511e-31,5.8943e-33,4.6227e-30,3.136e-30,2.6527e-30,3.67e-31,9.2741e-31,2.3061e-30,4.5342e-31,6.019e-31,6.6638e-31,4.8273e-31,1.3793e-32,7.4174e-31,1.7078e-31,3.5703e-31,6.1836e-32,9.6863e-31,6.5312e-31,2.6047e-30,2.6409e-30,1.4869e-30,1.2316e-30,6.7628e-31,3.6672e-31,3.0939e-31,2.0166e-30,5.4094e-32,2.0949e-30,1.3065e-30,7.6205e-31,7.8351e-31,2.2781e-30,5.0408e-31,1.3582e-30,5.5392e-31,1.6593e-31,1.9484e-30,5.1535e-32,6.7978e-31,2.464e-30,7.711e-31,1.1103e-31,1.7913e-30,2.0492e-30,8.7024e-31,4.7765e-31,1.2577e-30,1.337e-30,6.6365e-31,1.5296e-30,1.0113e-31,8.1832e-31,1.0809e-30,4.679e-31,3.2484e-32,1.1063e-30,3.9397e-31,1.3205e-30,1.4141e-30,4.1183e-31,1.0843e-30,1.8978e-31,1.2522e-30,6.2469e-31,8.0636e-31,1.5178e-30,7.6704e-31,1.3873e-31,1.132e-30,4.9689e-32,9.1631e-31,9.311e-31,8.5131e-31,1.636e-30,7.7506e-31,8.7057e-31,1.4894e-30,3.0103e-31,3.4586e-31,3.98e-31,4.5204e-31,3.9092e-31,3.7348e-32,7.445e-31,1.0199e-30,2.908e-31,1.6075e-30,3.6032e-31,9.4268e-31,5.1085e-32,1.0172e-30,9.5695e-31,3.5467e-30,4.51e-32,5.2769e-31,5.5199e-31,1.6115e-30,1.0529e-30,3.5445e-31,4.9947e-31,8.6565e-31,3.2355e-32,3.9632e-31,2.0398e-31,5.3596e-32,2.9667e-31,7.1579e-32,1.1186e-30,8.7316e-31,4.8678e-30,1.7047e-30,2.1547e-30,9.1737e-31,2.4268e-30,5.0539e-31,1.2078e-30,1.2845e-30,2.0901e-31,1.3551e-30,1.6743e-31,2.9794e-30,1.8425e-30,2.6981e-30,4.5644e-31,6.3489e-30,1.4927e-30,3.5588e-31,1.2683e-31,3.0976e-30,8.0269e-31,2.5085e-30,4.3105e-31,3.9189e-30,6.8063e-30,4.3963e-30,1.1172e-29,1.4182e-31,6.7893e-31,5.595e-30,1.0283e-30,6.1566e-30,1.8477e-30,2.0001e-30,5.8313e-30,1.8106e-31,2.11e-33,2.7245e-31,1.7941e-31,6.77e-31,8.7612e-30,2.4856e-30,2.9019e-30,1.7355e-30,1.157e-30,1.8307e-31,3.6562e-31,5.677e-31,2.2762e-32,8.221e-31,1.1455e-30,8.0462e-31,2.1148e-30,7.2626e-31,1.6759e-30,3.3465e-31,1.006e-30,9.1918e-31,4.2762e-31,1.1437e-30,2.6107e-30,4.4499e-31,9.6264e-31,8.9019e-31,5.3775e-31,4.5396e-31,3.84e-31,9.9848e-31,7.6648e-31,7.7416e-31,3.655e-31,3.1056e-30,3.5185e-31,9.4868e-32,7.83e-31,1.9039e-31,1.2886e-30,3.4334e-30,3.9976e-32,1.3387e-31,2.0945e-30,8.5112e-31,2.3339e-32,1.5339e-31,2.2922e-29,1.6121e-30,4.8746e-31,8.3589e-31,5.1734e-31,1.3938e-30,8.9745e-31,2.873e-31,3.9791e-31,2.2143e-31,8.3125e-31,1.4447e-30,1.5978e-31,1.3445e-30,1.1501e-30,6.111e-31,2.0947e-30,1.1555e-30,6.0065e-32,1.9977e-31,7.7357e-31,2.3711e-30,7.6447e-31,1.2769e-30,3.6219e-31,1.3065e-32,2.1319e-31,3.1405e-31,4.1771e-31,1.1458e-30,1.4418e-31,2.0136e-30,6.285e-31,6.2782e-31,2.801e-30,2.6953e-31,9.4313e-32,2.1468e-31,1.8844e-31,7.373e-31,2.6176e-30,9.8344e-31,1.6307e-31,9.2218e-31,3.5646e-31,1.1951e-30,1.7992e-31,1.0094e-30,1.1844e-30,1.4143e-30,9.7379e-31,4.0386e-31,1.3254e-30,1.2249e-30,1.5721e-30,8.0959e-31,1.8339e-30,4.7879e-31,1.2185e-30,2.3865e-30,9.0547e-31,9.6162e-31,8.259e-32,7.9994e-32,2.0664e-31,8.974e-30,5.5021e-31,6.2893e-30,2.8758e-32,1.8218e-30,8.1487e-31,2.8041e-30,1.1896e-30,3.3758e-30,1.6133e-30,1.5305e-30,4.5798e-31,3.5932e-31,1.7222e-31,2.5837e-30,1.7004e-30,1.7608e-30,1.646e-31,7.3202e-31,1.798e-30,4.8798e-31,2.632e-31,5.974e-31,1.5867e-30,1.6138e-30,9.1942e-31,7.5924e-31,1.9451e-30,1.9921e-30,1.3379e-31,2.4584e-31,4.31e-31,2.1341e-30,2.4996e-31,1.9992e-31,2.6249e-31,6.3966e-31,6.0634e-31,1.3536e-30,4.8314e-31,9.4691e-31,8.3637e-31,7.9311e-31,5.0931e-31,2.3698e-31,1.8958e-31,6.9084e-31,3.2757e-32,1.6787e-30,1.1142e-30,9.0161e-31,5.7741e-31,4.5585e-32,1.2277e-31,2.591e-31,4.6687e-31,6.6934e-32,8.4951e-31,5.4469e-32,1.0237e-30,1.8103e-31,4.1907e-31,4.0199e-30,1.41e-30,1.428e-30,3.5728e-31,2.4071e-30,4.8745e-31,3.7554e-31,4.309e-31,3.4908e-30,1.1754e-31,2.8882e-31,1.1611e-30,1.1148e-30,9.4383e-31,1.9394e-30,2.6186e-30,2.6834e-30,2.2487e-31,3.0564e-31,8.7137e-31,6.4217e-31,8.036e-31,7.5403e-32,1.9425e-31,8.0625e-31,5.3836e-31,2.1265e-31,5.8257e-32,6.5122e-31,7.9075e-32,3.1922e-31,2.8607e-31,2.8014e-31,5.9605e-31,7.8033e-31,1.6306e-31,2.0134e-31,1.0276e-30,1.3801e-30,1.7054e-30,1.0136e-30,1e-30,1.4623e-30,1.6559e-30,1.6025e-30,2.7573e-30,1.2591e-31,4.2126e-31,1.7624e-30,1.2358e-31,4.1316e-30,2.0496e-30,3.5594e-30,2.4654e-30,8.2495e-32,1.0301e-30,2.9418e-30,2.0753e-30,1.0686e-30,2.157e-30,2.5591e-30,2.3781e-30,6.1856e-32,2.4667e-30,2.9807e-30,4.7349e-31,2.3789e-30,3.8309e-30,1.7458e-30,1.1678e-30,8.4277e-32,2.9527e-30,8.2161e-32,1.3324e-30,8.4612e-31,7.7726e-32,1.2061e-31,9.4475e-31,6.5401e-31,2.5856e-31,8.9829e-31,1.003e-30,5.3849e-31,6.7664e-32,1.4011e-30,1.6995e-30,3.726e-31,1.5928e-30,2.1218e-32,2.9123e-30,3.8069e-31,7.4339e-32,1.7616e-30,1.7478e-31,3.1684e-31,4.9867e-31,1.9266e-30,6.8817e-31,1.2653e-32,7.3533e-31,1.6123e-31,3.7759e-31,1.5254e-31,9.8072e-32,2.7332e-30,9.1033e-31,1.3893e-30,2.1639e-31,8.4347e-33,1.7082e-30,1.3008e-30,3.4309e-31,1.5971e-31,4.5449e-31,7.0096e-31,2.3075e-31,8.1256e-31,1.4744e-30,2.074e-30,6.0858e-31,1.9626e-31,5.8615e-32,2.2184e-31,3.5458e-30,1.1059e-30,9.9811e-31,1.59e-32,1.5451e-30,7.326e-31,7.8389e-32,3.5862e-31,1.194e-30,4.5768e-31,3.0162e-31,4.3606e-31,1.0302e-30,8.1194e-31,1.3246e-31,8.5935e-31,8.5361e-31,8.5107e-31,6.6276e-31,5.7791e-31,1.9307e-30,1.037e-30,1.5232e-30,2.6178e-30,6.7464e-31,7.1531e-31,1.7831e-31,5.0786e-31,3.4145e-31,1.0014e-30,9.756e-32,7.3192e-31,1.254e-30,1.267e-31,1.7435e-30,5.4265e-32,5.5872e-32,3.3681e-31,2.897e-30,9.6694e-31,1.7927e-31,6.9817e-31,1.9014e-31,5.5164e-31,2.409e-30,1.3721e-30,1.4074e-30,3.7078e-31,3.09e-31,7.3867e-31,1.2549e-30,5.1424e-31,4.3297e-31,1.3438e-31,2.4637e-30,1.3878e-30,2.1614e-30,2.7237e-31,2.1317e-30,8.1679e-31,6.4265e-31,5.2854e-32,1.0221e-30,2.5625e-30,1.3551e-30,3.2428e-30,5.2e-31,1.0634e-30,2.1826e-30,2.4662e-30,5.6363e-30,8.7849e-31,2.1704e-30,3.4497e-31,2.1228e-30,1.7021e-30,1.7678e-31,1.6504e-30,8.5719e-31,1.3257e-31,2.9691e-31,1.7449e-30,1.6614e-30,1.2417e-30,4.2845e-31,1.6988e-30,1.7674e-30,3.3698e-31,3.8409e-30,3.4766e-31,3.2295e-31,5.5634e-31,6.6602e-31,4.787e-31,4.2732e-31,4.2513e-31,3.8975e-32,4.2934e-30,2.7056e-30,6.0898e-31,2.6413e-31,3.0823e-31,6.8488e-31,5.8147e-31,3.7988e-31,1.2098e-30,1.5458e-31,1.8107e-30,1.8097e-30,8.1082e-31,1.6017e-31,3.5909e-34,6.246e-31,1.6104e-30,2.5834e-30,1.0532e-31,6.7834e-30,5.8241e-31,1.8699e-31,1.9464e-30,2.0343e-30,6.6114e-31,9.8753e-31,3.7401e-31,7.4412e-32,7.4045e-31,5.139e-31,5.0069e-31,1.0009e-30,1.1776e-30,2.1146e-30,4.9237e-30,8.8648e-32,1.1284e-30,1.0689e-30,1.4247e-30,3.4902e-31,1.3259e-31,8.5199e-31,4.0547e-31,9.4112e-31,2.5398e-31,2.0525e-30,2.1702e-32,6.7524e-32,2.1745e-31,3.2723e-31,1.1965e-31,5.9262e-31,2.7542e-30,3.8399e-31,9.2908e-31,1.0115e-30,7.0734e-31,1.9916e-31,3.7165e-32,1.5224e-31,9.1045e-31,1.7562e-31,1.1802e-31,2.6619e-31,3.3655e-31,3.6029e-31,5.4229e-31,2.8272e-31,2.0448e-30,5.4541e-31,8.0297e-31,3.3051e-30,5.0887e-33,7.3944e-31,1.8953e-30,1.3321e-30,1.2672e-30,4.6473e-30,1.6314e-31,3.4539e-31,3.4398e-30,4.3853e-31,3.8095e-30,2.1816e-30,3.4544e-31,1.1046e-31,5.9306e-31,1.9264e-30,9.6268e-30,2.3037e-30,8.8364e-31,4.5498e-30,2.7057e-30,8.5917e-30,3.4714e-30,1.3123e-30,3.8151e-30,8.0142e-30,6.2689e-31,1.0734e-29,2.1867e-30,3.7355e-30,3.3358e-31,1.0251e-29,1.6725e-29".split(
                ',')).astype(float)

        self._complex_dtype = tf.complex128

    def test_ssfm_reference(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep(dt)
        (t, f) = utils.time_frequency_vector(
            N, dt, dtype=self._complex_dtype.real_dtype)

        P_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (W) Peak power of the
        # Gaussian pulse
        T_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (ps) Norm. temporal
        # scaling of the Gaussian pulse

        u_0 = np.sqrt(P_0) * np.exp(-((t / T_0) ** 2.0) / 2.0)
        u_0 = tf.complex(
            tf.cast(u_0, dtype=dtype.real_dtype),
            tf.cast(0.0, dtype=dtype.real_dtype)
        )

        ssfm = fiber.SSFM(
            alpha=0.0, beta_2=1.0, f_c=193.55e12, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm=2000, sample_duration=dt,
            with_amplification=False, with_attenuation=False,
            with_dispersion=True, with_nonlinearity=True,
            dtype=dtype, t_norm=1e-12, n_sp=1.0,
        )

        u = ssfm(u_0)

        self.assertLessEqual(
            np.mean((np.abs(u.numpy().flatten()) - self._u_ref.flatten()) ** 2),
            1e-7, 'incorrect_ssfm'
        )

    def test_adaptive_ssfm_reference(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep(dt)
        (t, f) = utils.time_frequency_vector(
            N, dt, dtype=self._complex_dtype.real_dtype)

        P_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (W) Peak power of the
        # Gaussian pulse
        T_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (ps) Norm. temporal
        # scaling of the Gaussian pulse

        u_0 = np.sqrt(P_0) * np.exp(-((t / T_0) ** 2.0) / 2.0)
        u_0 = tf.complex(
            tf.cast(u_0, dtype=dtype.real_dtype),
            tf.cast(0.0, dtype=dtype.real_dtype)
        )

        ssfm = fiber.SSFM(
            alpha=0.0, beta_2=1.0, f_c=193.55e12, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm="adaptive", sample_duration=dt,
            with_amplification=False, with_attenuation=False,
            with_dispersion=True, with_nonlinearity=True,
            dtype=dtype, t_norm=1e-12, n_sp=1.0,phase_inc=1e-3
        )

        u = ssfm(u_0)

        self.assertLessEqual(
            np.mean((np.abs(u.numpy().flatten()) - self._u_ref.flatten()) ** 2),
            1e-7, 'incorrect_adaptive_ssfm'
        )


    def test_ssfm_reference_graph(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep(dt)
        t, f = utils.time_frequency_vector(
            N, dt, dtype=self._complex_dtype.real_dtype)

        P_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (W) Peak power of the
        # Gaussian pulse
        T_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (ps) Norm. temporal
        # scaling of the Gaussian pulse

        u_0 = np.sqrt(P_0) * (np.sqrt(1.0) * np.exp(-((t / T_0) ** 2.0) / 2.0))
        u_0 = tf.complex(
            tf.cast(u_0, dtype=dtype.real_dtype),
            tf.cast(0.0, dtype=dtype.real_dtype)
        )

        ssfm = fiber.SSFM(
            alpha=0.0, beta_2=1.0, f_c=193.55e12, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm=2000, sample_duration=dt,
            with_amplification=False, with_attenuation=False,
            with_dispersion=True, with_nonlinearity=True,
            dtype=dtype, t_norm=1e-12, n_sp=1.0,
        )

        @tf.function
        def ssfm_graph(inputs):
            return ssfm(inputs)

        u = ssfm_graph((u_0))

        self.assertLessEqual(
            np.mean((np.abs(u.numpy().flatten()) - self._u_ref.flatten()) ** 2),
            1e-7,
            'incorrect_ssfm_in_graph_mode'
        )

    def test_adaptive_ssfm_reference_graph(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep(dt)
        t, f = utils.time_frequency_vector(
            N, dt, dtype=self._complex_dtype.real_dtype)

        P_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (W) Peak power of the
        # Gaussian pulse
        T_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (ps) Norm. temporal
        # scaling of the Gaussian pulse

        u_0 = np.sqrt(P_0) * (np.sqrt(1.0) * np.exp(-((t / T_0) ** 2.0) / 2.0))
        u_0 = tf.complex(
            tf.cast(u_0, dtype=dtype.real_dtype),
            tf.cast(0.0, dtype=dtype.real_dtype)
        )

        ssfm = fiber.SSFM(
            alpha=0.0, beta_2=1.0, f_c=193.55e12, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm="adaptive", sample_duration=dt,
            with_amplification=False, with_attenuation=False,
            with_dispersion=True, with_nonlinearity=True,
            dtype=dtype, t_norm=1e-12, n_sp=1.0, phase_inc=1e-3
        )

        @tf.function
        def ssfm_graph(inputs):
            return ssfm(inputs)

        u = ssfm_graph((u_0))

        self.assertLessEqual(
            np.mean((np.abs(u.numpy().flatten()) - self._u_ref.flatten()) ** 2),
            1e-7,
            'incorrect_adaptive_ssfm_in_graph_mode'
        )

    def test_ssfm_reference_batch_graph(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep(dt)
        t, f = utils.time_frequency_vector(
            N, dt, dtype=self._complex_dtype.real_dtype)

        P_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (W) Peak power of the
        # Gaussian pulse
        T_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (ps) Norm. temporal
        # scaling of the Gaussian pulse

        u_0 = np.sqrt(P_0) * (np.sqrt(1.0) * np.exp(-((t / T_0) ** 2.0) / 2.0))
        u_0 = tf.complex(
            tf.cast(u_0, dtype=dtype.real_dtype),
            tf.cast(0.0, dtype=dtype.real_dtype)
        )

        u_0 = tf.expand_dims(u_0, axis=0)
        u_0 = tf.expand_dims(u_0, axis=0)
        u_0 = tf.tile(u_0, [2, 2, 1])

        ssfm = fiber.SSFM(
            alpha=0.0, beta_2=1.0, f_c=193.55e12, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm=2000, sample_duration=dt,
            with_amplification=True, with_attenuation=False,
            with_dispersion=True, with_nonlinearity=True,
            dtype=dtype, t_norm=1e-12, n_sp=0.0,
        )

        @tf.function
        def ssfm_graph(inputs):
            return ssfm(inputs)

        u = ssfm_graph((u_0))

        u_ref = np.expand_dims(self._u_ref, axis=0)
        u_ref = np.expand_dims(u_ref, axis=0)
        u_ref = np.repeat(u_ref, 2, 0)
        u_ref = np.repeat(u_ref, 2, 1)

        self.assertLessEqual(
            np.mean((np.abs(u.numpy()) - u_ref) ** 2),
            1e-7,
            'incorrect_ssfm_batch_processing'
        )

    def test_adaptive_ssfm_reference_batch_graph(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep(dt)
        t, f = utils.time_frequency_vector(
            N, dt, dtype=self._complex_dtype.real_dtype)

        P_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (W) Peak power of the
        # Gaussian pulse
        T_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (ps) Norm. temporal
        # scaling of the Gaussian pulse

        u_0 = np.sqrt(P_0) * (np.sqrt(1.0) * np.exp(-((t / T_0) ** 2.0) / 2.0))
        u_0 = tf.complex(
            tf.cast(u_0, dtype=dtype.real_dtype),
            tf.cast(0.0, dtype=dtype.real_dtype)
        )

        u_0 = tf.expand_dims(u_0, axis=0)
        u_0 = tf.expand_dims(u_0, axis=0)
        u_0 = tf.tile(u_0, [2, 2, 1])

        ssfm = fiber.SSFM(
            alpha=0.0, beta_2=1.0, f_c=193.55e12, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm="adaptive", sample_duration=dt,
            with_amplification=True, with_attenuation=False,
            with_dispersion=True, with_nonlinearity=True,
            dtype=dtype, t_norm=1e-12, n_sp=0.0, phase_inc=1e-3
        )

        @tf.function
        def ssfm_graph(inputs):
            return ssfm(inputs)

        u = ssfm_graph((u_0))

        u_ref = np.expand_dims(self._u_ref, axis=0)
        u_ref = np.expand_dims(u_ref, axis=0)
        u_ref = np.repeat(u_ref, 2, 0)
        u_ref = np.repeat(u_ref, 2, 1)

        self.assertLessEqual(
            np.mean((np.abs(u.numpy()) - u_ref) ** 2),
            1e-7,
            'incorrect_adaptive_ssfm_batch_processing'
        )

    def test_ssfm_reference_batch_dual_polarized_graph(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep
        t, f = utils.time_frequency_vector(
            N, dt, dtype=self._complex_dtype.real_dtype)

        # The idea is to have the same power on the fiber by distributing
        # the power uniformly over both polarizations, further the factor
        # 8/9 of the Manakov equation has to be accounted for. Then dual
        # polarized transmission should equal unpolarized tranmission.
        P_0 = tf.constant(9/8 * 0.5, dtype=dtype.real_dtype)  # (W) Peak power
        # of the Gaussian pulse
        T_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (ps) Norm. temporal
        # scaling of the Gaussian pulse

        u_0 = np.sqrt(P_0) * (
                    np.sqrt(1.0) * np.exp(-((t / T_0) ** 2.0) / 2.0))
        u_0 = tf.complex(
            tf.cast(u_0, dtype=dtype.real_dtype),
            tf.cast(0.0, dtype=dtype.real_dtype)
        )

        u_0 = tf.expand_dims(u_0, axis=0)
        u_0 = tf.expand_dims(u_0, axis=0)
        u_0 = tf.tile(u_0, [3, 2, 1])

        ssfm = fiber.SSFM(
            alpha=0.0, beta_2=1.0, f_c=193.55e12, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm=2000,
            sample_duration=dt,
            with_amplification=False, with_attenuation=False,
            with_dispersion=True, with_nonlinearity=True,
            with_manakov=True,
            dtype=dtype, t_norm=1e-12, n_sp=0.0,
        )

        @tf.function
        def ssfm_graph(inputs):
            return ssfm(inputs)

        # Remove the Manakov factor and geometrically add both polarizations
        u = ssfm_graph((u_0)) * tf.cast(tf.sqrt(8/9), dtype)
        u = tf.norm(u, axis=-2, keepdims=True)

        u_ref = tf.expand_dims(self._u_ref, axis=0)
        u_ref = tf.expand_dims(u_ref, axis=0)
        u_ref = tf.tile(u_ref, [3, 1, 1])

        self.assertLessEqual(
            np.mean((np.abs(u.numpy()) - u_ref) ** 2),
            1e-7,
            'incorrect_ssfm_dual_polarized_batch_processing'
        )

    def test_adaptive_ssfm_reference_batch_dual_polarized_graph(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep
        t, f = utils.time_frequency_vector(
            N, dt, dtype=self._complex_dtype.real_dtype)

        # The idea is to have the same power on the fiber by distributing
        # the power uniformly over both polarizations, further the factor
        # 8/9 of the Manakov equation has to be accounted for. Then dual
        # polarized transmission should equal unpolarized tranmission.
        P_0 = tf.constant(9/8 * 0.5, dtype=dtype.real_dtype)  # (W) Peak power
        # of the Gaussian pulse
        T_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (ps) Norm. temporal
        # scaling of the Gaussian pulse

        u_0 = np.sqrt(P_0) * (
                    np.sqrt(1.0) * np.exp(-((t / T_0) ** 2.0) / 2.0))
        u_0 = tf.complex(
            tf.cast(u_0, dtype=dtype.real_dtype),
            tf.cast(0.0, dtype=dtype.real_dtype)
        )

        u_0 = tf.expand_dims(u_0, axis=0)
        u_0 = tf.expand_dims(u_0, axis=0)
        u_0 = tf.tile(u_0, [3, 2, 1])

        ssfm = fiber.SSFM(
            alpha=0.0, beta_2=1.0, f_c=193.55e12, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm="adaptive",
            sample_duration=dt,
            with_amplification=False, with_attenuation=False,
            with_dispersion=True, with_nonlinearity=True,
            with_manakov=True,
            dtype=dtype, t_norm=1e-12, n_sp=0.0, phase_inc=1e-3
        )

        @tf.function
        def ssfm_graph(inputs):
            return ssfm(inputs)

        # Remove the Manakov factor and geometrically add both polarizations
        u = ssfm_graph((u_0)) * tf.cast(tf.sqrt(8/9), dtype)
        u = tf.norm(u, axis=-2, keepdims=True)

        u_ref = tf.expand_dims(self._u_ref, axis=0)
        u_ref = tf.expand_dims(u_ref, axis=0)
        u_ref = tf.tile(u_ref, [3, 1, 1])

        self.assertLessEqual(
            np.mean((np.abs(u.numpy()) - u_ref) ** 2),
            1e-7,
            'incorrect_adaptive_ssfm_dual_polarized_batch_processing'
        )


    def test_ssfm_amplification_graph(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep(dt)
        t, f = utils.time_frequency_vector(
            N, dt, dtype=self._complex_dtype.real_dtype)

        P_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (W) Peak power of the
        # Gaussian pulse
        T_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (ps) Norm. temporal
        # scaling of the Gaussian pulse

        u_0 = np.sqrt(P_0) * (np.sqrt(1.0) * np.exp(-((t / T_0) ** 2.0) / 2.0))
        u_0 = tf.complex(
            tf.cast(u_0, dtype=dtype.real_dtype),
            tf.cast(0.0, dtype=dtype.real_dtype)
        )

        ssfm = fiber.SSFM(
            alpha=0.046, beta_2=1.0, f_c=193.55e12, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm=2000, sample_duration=dt,
            with_amplification=True, with_attenuation=True,
            with_dispersion=False, with_nonlinearity=False,
            dtype=dtype, t_norm=1e-12, n_sp=0.0,
        )

        @tf.function
        def ssfm_graph(inputs):
            return ssfm(inputs)

        u = ssfm_graph((u_0))

        self.assertLessEqual(
            np.mean(
	            (
			        np.abs(u.numpy().flatten()) - np.abs(u_0.numpy().flatten())
	            ) ** 2),
            1e-10,
            'incorrect_ssfm_amplification'
        )

    def test_adaptive_ssfm_amplification_graph(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep(dt)
        t, f = utils.time_frequency_vector(
            N, dt, dtype=self._complex_dtype.real_dtype)

        P_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (W) Peak power of the
        # Gaussian pulse
        T_0 = tf.constant(1.0, dtype=dtype.real_dtype)  # (ps) Norm. temporal
        # scaling of the Gaussian pulse

        u_0 = np.sqrt(P_0) * (np.sqrt(1.0) * np.exp(-((t / T_0) ** 2.0) / 2.0))
        u_0 = tf.complex(
            tf.cast(u_0, dtype=dtype.real_dtype),
            tf.cast(0.0, dtype=dtype.real_dtype)
        )

        ssfm = fiber.SSFM(
            alpha=0.046, beta_2=1.0, f_c=193.55e12, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm="adaptive", sample_duration=dt,
            with_amplification=True, with_attenuation=True,
            with_dispersion=False, with_nonlinearity=False,
            dtype=dtype, t_norm=1e-12, n_sp=0.0, phase_inc=1e-3
        )

        @tf.function
        def ssfm_graph(inputs):
            return ssfm(inputs)

        u = ssfm_graph((u_0))

        self.assertLessEqual(
            np.mean(
                (
                        np.abs(u.numpy().flatten()) - np.abs(u_0.numpy().flatten())
                ) ** 2),
            1e-10,
            'incorrect_adaptive_ssfm_amplification'
        )


    def test_ssfm_amplification_noise_graph(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep(dt)
        n_sp = 1.0
        f_c = 193.55e12
        alpha = 0.046
        length = 5.0
        t_norm = 1e-12

        rho_n = \
            sn.constants.H * f_c * alpha * length * \
            n_sp  # in (W/Hz)

        # Calculate noise power depending on simulation bandwidth
        p_n_ase = rho_n / dt / t_norm

        ssfm = fiber.SSFM(
            alpha=alpha, beta_2=1.0, f_c=f_c, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm=2000, sample_duration=dt,
            with_amplification=True, with_attenuation=True,
            with_dispersion=False, with_nonlinearity=False,
            dtype=dtype, t_norm=t_norm, n_sp=n_sp,
        )

        u_0 = tf.zeros((100, 10, 2000), dtype=self._complex_dtype)
        @tf.function
        def ssfm_graph(inputs):
            return ssfm(inputs)

        u = ssfm_graph((u_0))

        sigma_n_ASE_square = np.mean(np.var(u.numpy(), axis=-1))
        self.assertLessEqual(
            np.abs((p_n_ase - sigma_n_ASE_square) / p_n_ase), 1e-2,
            'incorrect_ssfm_amplification_noise'
        )

    def test_adaptive_ssfm_amplification_noise_graph(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep(dt)
        n_sp = 1.0
        f_c = 193.55e12
        alpha = 0.046
        length = 5.0
        t_norm = 1e-12

        rho_n = \
            sn.constants.H * f_c * alpha * length * \
            n_sp  # in (W/Hz)

        # Calculate noise power depending on simulation bandwidth
        p_n_ase = rho_n / dt / t_norm

        ssfm = fiber.SSFM(
            alpha=alpha, beta_2=1.0, f_c=f_c, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm="adaptive", sample_duration=dt,
            with_amplification=True, with_attenuation=True,
            with_dispersion=False, with_nonlinearity=False,
            dtype=dtype, t_norm=t_norm, n_sp=n_sp, phase_inc=1e-3
        )

        u_0 = tf.zeros((100, 10, 2000), dtype=self._complex_dtype)
        @tf.function
        def ssfm_graph(inputs):
            return ssfm(inputs)

        u = ssfm_graph((u_0))

        sigma_n_ASE_square = np.mean(np.var(u.numpy(), axis=-1))
        self.assertLessEqual(
            np.abs((p_n_ase - sigma_n_ASE_square) / p_n_ase), 1e-2,
            'incorrect_adaptive_ssfm_amplification_noise'
        )


    def test_ssfm_amplification_noise_dual_polarized_graph(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep(dt)
        n_sp = 1.0
        f_c = 193.55e12
        alpha = 0.046
        length = 5.0
        t_norm = 1e-12

        rho_n = \
            sn.constants.H * f_c * alpha * length * \
            n_sp  # in (W/Hz)

        # Calculate noise power depending on simulation bandwidth
        p_n_ase = rho_n / dt / t_norm

        ssfm = fiber.SSFM(
            alpha=alpha, beta_2=1.0, f_c=f_c, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm=2000, sample_duration=dt,
            with_amplification=True, with_attenuation=True,
            with_dispersion=False, with_nonlinearity=False,
            with_manakov=True,
            dtype=dtype, t_norm=t_norm, n_sp=n_sp,
        )

        u_0 = tf.zeros((100, 2, 2000), dtype=self._complex_dtype)
        @tf.function
        def ssfm_graph(inputs):
            return ssfm(inputs)

        u = ssfm_graph((u_0))

        sigma_n_ASE_square = np.mean(np.var(u.numpy(), axis=-1))
        self.assertLessEqual(
            np.abs((0.5 * p_n_ase - sigma_n_ASE_square) / (0.5 *  p_n_ase)),
            1e-2,
            'incorrect_ssfm_amplification_noise_for_dual_polarization'
        )

    def test_adaptive_ssfm_amplification_noise_dual_polarized_graph(self):
        dtype = self._complex_dtype

        T = 100  # time window (period)
        N = 2 ** 12  # number of points
        dt = T / N  # timestep(dt)
        n_sp = 1.0
        f_c = 193.55e12
        alpha = 0.046
        length = 5.0
        t_norm = 1e-12

        rho_n = \
            sn.constants.H * f_c * alpha * length * \
            n_sp  # in (W/Hz)

        # Calculate noise power depending on simulation bandwidth
        p_n_ase = rho_n / dt / t_norm

        ssfm = fiber.SSFM(
            alpha=alpha, beta_2=1.0, f_c=f_c, gamma=1.0,
            half_window_length=0, length=5.0, n_ssfm="adaptive", sample_duration=dt,
            with_amplification=True, with_attenuation=True,
            with_dispersion=False, with_nonlinearity=False,
            with_manakov=True,
            dtype=dtype, t_norm=t_norm, n_sp=n_sp, phase_inc=1e-3
        )

        u_0 = tf.zeros((100, 2, 2000), dtype=self._complex_dtype)
        @tf.function
        def ssfm_graph(inputs):
            return ssfm(inputs)

        u = ssfm_graph((u_0))

        sigma_n_ASE_square = np.mean(np.var(u.numpy(), axis=-1))
        self.assertLessEqual(
            np.abs((0.5 * p_n_ase - sigma_n_ASE_square) / (0.5 *  p_n_ase)),
            1e-2,
            'incorrect_adaptive_ssfm_amplification_noise_for_dual_polarization'
        )

    def test_edfa_noise(self):
        F = 10 ** (6 / 10)
        G = 2.0
        f_c = 193.55e12
        dt = 1e-12
        n_sp = F / tf.cast(2.0, self._complex_dtype.real_dtype) * G / (
                G - tf.cast(
            1.0, self._complex_dtype.real_dtype))
        rho_n_ASE = tf.cast(n_sp * (
		        G - tf.cast(1.0, self._complex_dtype.real_dtype)) *
                            sn.constants.H * f_c,
                            self._complex_dtype.real_dtype)  # Noise density
        # in (W/Hz)
        P_n_ASE = tf.cast(
            tf.cast(2.0, self._complex_dtype.real_dtype) * rho_n_ASE *
            (tf.cast(1.0, self._complex_dtype.real_dtype) / dt),
            self._complex_dtype.real_dtype)  # Noise power in (W)
        amplifier = edfa.EDFA(G, F, f_c, dt, False, self._complex_dtype)
        x = tf.zeros((100, 10, 1000), dtype=self._complex_dtype)
        y = amplifier(x)
        sigma_n_ASE_square = np.mean(np.var(y.numpy(), axis=-1))
        self.assertLessEqual(
            np.abs((P_n_ASE - sigma_n_ASE_square) / P_n_ASE), 1e-2,
            'incorrect_edfa_noise'
        )

    def test_edfa_noise_graph(self):
        F = 10 ** (6 / 10)
        G = 2.0
        f_c = 193.55e12
        dt = 1e-12
        n_sp = F / tf.cast(2.0, self._complex_dtype.real_dtype) * G / (
                G - tf.cast(
            1.0, self._complex_dtype.real_dtype))
        rho_n_ASE = tf.cast(n_sp * (
		        G - tf.cast(1.0, self._complex_dtype.real_dtype)) *
                            sn.constants.H * f_c,
                            self._complex_dtype.real_dtype)  # Noise density
        # in (W/Hz)
        P_n_ASE = tf.cast(
            tf.cast(2.0, self._complex_dtype.real_dtype) * rho_n_ASE *
            (tf.cast(1.0, self._complex_dtype.real_dtype) / dt),
            self._complex_dtype.real_dtype)  # Noise power in (W)
        amplifier = edfa.EDFA(G, F, f_c, dt, False, self._complex_dtype)
        x = tf.zeros((100, 10, 1000), dtype=self._complex_dtype)

        @tf.function
        def amplifier_graph(inputs):
            return amplifier(inputs)

        y = amplifier_graph(x)

        sigma_n_ASE_square = np.mean(np.var(y.numpy(), axis=-1))
        self.assertLessEqual(
            np.abs((P_n_ASE - sigma_n_ASE_square) / P_n_ASE), 1e-2,
            'incorrect_edfa_noise_in_graph_mode'
        )

    def test_edfa_gain_batch(self):
        F = 0
        G = 4.0
        f_c = 193.55e12
        dt = 1e-12
        amplifier = edfa.EDFA(G, F, f_c, dt, False, self._complex_dtype)
        shape = (10, 10, 10000)
        x = tf.complex(
            tf.cast(1.0 / tf.sqrt(2.0), self._complex_dtype.real_dtype) *
            tf.ones(shape, dtype=self._complex_dtype.real_dtype),
            tf.cast(1.0 / tf.sqrt(2.0), self._complex_dtype.real_dtype) *
            tf.ones(shape, dtype=self._complex_dtype.real_dtype)
        )
        y = amplifier(x)
        p = np.mean(np.mean(np.abs(y.numpy()) ** 2.0, axis=-1))
        self.assertLessEqual(
            np.abs(G - p), 1e-5,
            'incorrect_edfa_gain_in_batch_processing')

    def test_edfa_gain_batch_graph(self):
        F = 0.0
        G = 4.0
        f_c = 193.55e12
        dt = 1e-12
        amplifier = edfa.EDFA(G, F, f_c, dt, False, self._complex_dtype)
        shape = (100, 10, 10000)
        x = tf.complex(
            tf.cast(1.0 / tf.sqrt(2.0), self._complex_dtype.real_dtype) *
            tf.ones(shape, dtype=self._complex_dtype.real_dtype),
            tf.cast(1.0 / tf.sqrt(2.0), self._complex_dtype.real_dtype) *
            tf.ones(shape, dtype=self._complex_dtype.real_dtype)
        )

        @tf.function
        def amplifier_graph(inputs):
            return amplifier(inputs)

        y = amplifier_graph(x)

        p = np.mean(np.mean(np.abs(y.numpy()) ** 2.0, axis=-1))
        self.assertLessEqual(
            np.abs(G - p), 1e-5,
            'incorrect_edfa_gain_in_graph_mode_and_batch_processing')

    def test_edfa_gain_batch_dual_polarized_graph(self):
        F = 0
        G = 4.0
        f_c = 193.55e12
        dt = 1e-12
        amplifier = edfa.EDFA(G, F, f_c, dt, True, self._complex_dtype)
        shape = (100, 2, 10000)
        x = tf.cast(tf.sqrt(1.0 / 2.0), self._complex_dtype) * \
            tf.complex(
                tf.cast(1.0 / tf.sqrt(2.0), self._complex_dtype.real_dtype) *
                tf.ones(shape, dtype=self._complex_dtype.real_dtype),
                tf.cast(1.0 / tf.sqrt(2.0), self._complex_dtype.real_dtype) *
                tf.ones(shape, dtype=self._complex_dtype.real_dtype)
        )

        @tf.function
        def amplifier_graph(inputs):
            return amplifier(inputs)

        y = amplifier_graph(x)

        p = np.mean(np.mean(
            np.sum(np.abs(y.numpy()) ** 2.0, axis=-2), axis=-1)
        )
        self.assertLessEqual(
            np.abs(G - p), 1e-5,
            'incorrect_edfa_gain_for_batch_graph_dual_polarization_combination')
