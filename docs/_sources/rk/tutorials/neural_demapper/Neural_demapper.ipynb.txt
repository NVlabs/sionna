{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Neural Demapper Training and TensorRT Export\n",
    "\n",
    "![Neural Demapper Basics](../../figs/tutorial_nn_demapper_basic.png)\n",
    "   \n",
    "This first part of the tutorial covers training and implementation of a neural network (NN) based demapper using Sionna. We keep the neural network architecture straightforward to focus on efficient inference and the integration in the OAI stack.\n",
    " \n",
    "While we use demapping as our example since it is a simple and well-understood task, neural networks could potentially replace many signal processing blocks like channel estimation or equalization.\n",
    "The main focus here is demonstrating how to integrate neural network (NN) components into the physical layer's signal processing pipeline.\n",
    "\n",
    "An important aspect is that OAI does not provide an estimate of the noise variance as required for *textbook*-style a posteriori probability (APP) demappers but provides a scaled version of the magnitude of the channel estimates. This will be explained in the following.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Python Imports"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import the required libraries\n",
    "import os # Configure which GPU\n",
    "if os.getenv(\"CUDA_VISIBLE_DEVICES\") is None:\n",
    "    gpu_num = 0 # Use \"\" to use the CPU\n",
    "    os.environ[\"CUDA_VISIBLE_DEVICES\"] = f\"{gpu_num}\"\n",
    "\n",
    "# Set the TF log level to only show errors\n",
    "os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'\n",
    "\n",
    "import numpy as np\n",
    "import tensorflow as tf\n",
    "\n",
    "# Import Sionna\n",
    "import sionna as sn\n",
    "\n",
    "# For plotting\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# For saving complex Python data structures efficiently\n",
    "import pickle\n",
    "\n",
    "# For the implementation of the neural receiver\n",
    "from tensorflow.keras import Model\n",
    "from tensorflow.keras.layers import Dense\n",
    "\n",
    "# For ONNX / TensorRT export\n",
    "import tf2onnx\n",
    "import onnx\n",
    "\n",
    "# Set seed for reproducible results\n",
    "sn.phy.config.seed = 42"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Background: APP-Demapping\n",
    "\n",
    "We assume a sequence of `modulation order` bits $b$ which are mapped to a complex-valued QAM symbol. At the receiver, a noisy version of this symbol $y$ is observed and the task of the demapper is to calculate the individual a posteriori probabilities (APP) that each bit was 0 or 1.\n",
    "\n",
    "In this tutorial, we will use 16-QAM modulation as example. While the demapper can be extended to other modulation orders in a straightforward manner, we focus on 16-QAM for clarity.\n",
    "Note that with Gray-labeling, it is possible to use a higher-order demapper (e.g., 64-QAM) to demap lower-order modulations (e.g., 16-QAM) by discarding unused bits. However, this introduces unnecessary computational complexity and is not explored in this tutorial.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 700x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Let's visualize all possible symbols for a 16-QAM\n",
    "NUM_BITS_PER_SYMBOL = 4\n",
    "mapper = sn.phy.mapping.Mapper(num_bits_per_symbol=NUM_BITS_PER_SYMBOL,\n",
    "                           constellation_type=\"qam\")\n",
    "demapper = sn.phy.mapping.Demapper(demapping_method=\"app\",\n",
    "                               num_bits_per_symbol=NUM_BITS_PER_SYMBOL,\n",
    "                               constellation_type=\"qam\")\n",
    "mapper.constellation.show();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above constellation diagram uses Gray labeling as used in the 5G standard.\n",
    "\n",
    "After transmission over a noise channel the received symbols can be visualized."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Binary source to generate uniform i.i.d. bits\n",
    "binary_source = sn.phy.mapping.BinarySource()\n",
    "\n",
    "# AWGN channel\n",
    "awgn_channel = sn.phy.channel.AWGN()\n",
    "\n",
    "BATCH_SIZE = 128 # How many examples are processed by Sionna in parallel\n",
    "EBN0_DB = 17.0 # Eb/N0 in dB\n",
    "\n",
    "no = sn.phy.utils.ebnodb2no(ebno_db=EBN0_DB,\n",
    "                            num_bits_per_symbol=NUM_BITS_PER_SYMBOL,\n",
    "                            coderate=1.0) # Coderate set to 1 as we do uncoded transmission here\n",
    "\n",
    "bits = binary_source([BATCH_SIZE, 1200]) # Blocklength\n",
    "x = mapper(bits)\n",
    "y = awgn_channel(x, no)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Let's visualize the received symbols\n",
    "plt.figure(figsize=(8,8))\n",
    "plt.axes().set_aspect(1.0)\n",
    "plt.grid(True)\n",
    "plt.scatter(tf.math.real(y), tf.math.imag(y), label='Received')\n",
    "plt.scatter(tf.math.real(x), tf.math.imag(x), label='Transmitted')\n",
    "plt.legend(fontsize=20);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The task of the demapper is now to calculate the a posterior probabilities (APP) $p(b_i=1|y)$ and $p(b_i=0|y)$ that the $i$-th bit was 0 or 1 given the received symbol $y$.\n",
    "Typically, this is done by calculating log likelihood ratios (LLRs), i.e., logits instead of working in the probability domain.\n",
    "\n",
    "For the $i$-th bit the LLR is defined as\n",
    "$LLR(b_i) = \\log[ \\frac{p(b_i=1)}{p(b_i=0)}]$\n",
    "\n",
    "One can show that the optimal APP demapping rule for an AWGN channel and the $i$-th bit can be computed as\n",
    "        $$LLR(i) = \\ln\\left(\\frac{\\Pr\\left(b_i=1\\lvert y\\right)}{\\Pr\\left(b_i=0\\lvert y\\right)}\\right) =\\ln\\left(\\frac{\n",
    "                \\sum_{c\\in\\mathcal{C}_{i,1}} \\Pr\\left(c\\right)\n",
    "                \\exp\\left(-\\frac{1}{N_o}\\left|y-c\\right|^2\\right)\n",
    "                }{\n",
    "                \\sum_{c\\in\\mathcal{C}_{i,0}} \\Pr\\left(c\\right)\n",
    "                \\exp\\left(-\\frac{1}{N_o}\\left|y-c\\right|^2\\right)\n",
    "                }\\right)$$\n",
    "\n",
    "Note that simplifications such as *max-log* demapping exist.\n",
    "\n",
    "From the above equation, we see that the neural demapper requires the received complex-valued symbol $y$ and the noise variance $N_0$ as input. It returns `modulation order` LLRs. We can use the Sionna APP demapper as a reference implementation to verify the performance of the neural demapper."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original bits: [[0 0 0 1]]\n",
      "Complex-valued symbol: [[0.31622776+0.94868326j]]\n",
      "Received noisy symbol:  [[0.6098989+0.91612023j]]\n",
      "LLRs after demapping: [[-15.877348  -30.353184   -0.5706413   7.1762133]]\n"
     ]
    }
   ],
   "source": [
    "bits = np.array([[0,0,0,1]])\n",
    "print(\"Original bits:\", bits)\n",
    "x = mapper(bits)\n",
    "print(\"Complex-valued symbol:\", x.numpy())\n",
    "# Add some noise\n",
    "no = 0.05 # Noise variance\n",
    "y = awgn_channel(x, no)\n",
    "print(\"Received noisy symbol: \", y.numpy())\n",
    "llr = demapper(y, no)\n",
    "print(\"LLRs after demapping:\", llr.numpy())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If the sign of the LLR is positive, the value of the associated bit is more likely a \"1\".\n",
    "Consequently, negative LLRs are associated to a bit value of \"0\". The magnitude of the LLRs represents their reliability.\n",
    "This soft-information can be used by the forward error correction (FEC) decoder to recover from transmission errors.\n",
    "\n",
    "The above equations are the optimal demapping rule for an AWGN channel. However, implementing the optimal demapper for unknown channels remains a challenge."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Understanding the OAI Data Structure\n",
    "\n",
    "Before we can start to train our neural demapper, we need to understand the OAI data structure and align the Sionna setup for training.\n",
    "For this, we use the captured data from the [previous tutorial](../data_acquisition/index.rst)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "data_in.shape:  (856554, 2, 2)\n",
      "data_out.shape:  (856554, 4)\n",
      "First 5 input symbols: [[[-13 -18]\n",
      "  [ 28  28]]\n",
      "\n",
      " [[ 47  32]\n",
      "  [ 28  28]]\n",
      "\n",
      " [[ 15 -18]\n",
      "  [ 28  28]]\n",
      "\n",
      " [[ 17   9]\n",
      "  [ 28  28]]\n",
      "\n",
      " [[ 40 -43]\n",
      "  [ 27  27]]]\n",
      "First 5 output symbols: [[-13 -18  15  10]\n",
      " [ 47  32 -19  -4]\n",
      " [ 15 -18  13  10]\n",
      " [ 17   9  11  19]\n",
      " [ 40 -43 -13 -16]]\n"
     ]
    }
   ],
   "source": [
    "import sys\n",
    "sys.path.append('../../')\n",
    "\n",
    "MAX_LINES = 1000000 # Stop after this many imported lines\n",
    "\n",
    "# Depends on config that was used for data capture\n",
    "fn_input = '../../logs/demapper_in.txt'\n",
    "fn_output = '../../logs/demapper_out.txt'\n",
    "\n",
    "# Read training data from data dump\n",
    "def read_training_data(in_file, element_shape):\n",
    "    with open(in_file) as f:\n",
    "        lines = f.readlines()\n",
    "    result = None\n",
    "    i = 0\n",
    "    while i < len(lines):\n",
    "        try:\n",
    "            i = lines.index('QAM16\\n', i)\n",
    "        except ValueError as e:\n",
    "            break\n",
    "        num = int(lines[i+1])\n",
    "        #if num > 30:\n",
    "        #    print(num)\n",
    "        data = np.fromstring(' '.join(lines[i+2:i+2+num]), sep=' ', dtype=np.int16).reshape(num, *element_shape)\n",
    "        if result is None:\n",
    "            result = data\n",
    "        else:\n",
    "            result = np.concatenate((result, data))\n",
    "        i += 2 + num\n",
    "        if i>MAX_LINES:\n",
    "            break\n",
    "    return result\n",
    "\n",
    "def int16_to_float16(symbols_i):\n",
    "    return np.ldexp(symbols_i.astype(np.float32), -8).astype(np.float16)\n",
    "\n",
    "def float16_to_int16(llrs_h):\n",
    "    return np.rint(np.ldexp(llrs_h.astype(np.float32), 8)).astype(np.int16)\n",
    "\n",
    "def norm_int16_to_float16(symbols_i, magnitudes):\n",
    "    args = symbols_i.astype(np.float32)\n",
    "    if magnitudes is not None:\n",
    "        args = args / magnitudes.astype(np.float32)\n",
    "    return np.ldexp(args, 7).astype(np.float16)\n",
    "\n",
    "data_in = read_training_data(fn_input, (2, 2))\n",
    "data_out = read_training_data(fn_output, (4,))\n",
    "assert(data_in.shape[0] == data_out.shape[0])\n",
    "\n",
    "print(\"data_in.shape: \", data_in.shape)\n",
    "print(\"data_out.shape: \", data_out.shape)\n",
    "\n",
    "print(\"First 5 input symbols:\", data_in[0:5,:])\n",
    "print(\"First 5 output symbols:\", data_out[0:5,:])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "OAI uses integer representations of the input/output symbols. It requires scaling to be compatible with Sionna. \n",
    "\n",
    "The second input values are the resulting channel estimation magnitudes and can be used for re-scaling.\n",
    "After re-scaling, the QAM symbols are scaled such that the first decision boundary equals to 1.0, i.e., the QAM constellation does not have unit power.\n",
    "We will now re-scale the recorded symbols and compare the resulting LLRs to the Sionna reference."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Avg. power after norm: 1.0407250648843098\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = data_in[:10000,...]\n",
    "# OAI uses h as decision region between inner and outer bits\n",
    "# We scale the received symbols y back such that y_n = y / h\n",
    "y_n = x[:,0,0]/x[:,1,0] + 1.j*x[:,0,1]/x[:,1,1]\n",
    "\n",
    "# This normalizes the first decision bound to 1,\n",
    "# i.e., the center between inner and out constellation points.\n",
    "# In the Sionna definition (i.e., power normalized QAM),\n",
    "# the inner/outer points are at 0.3162278 and 0.9486833, respectively.\n",
    "# Thus we need to scale y_n by s = 0.9486833 - 0.3162278\n",
    "s = 0.9486833 - 0.3162278 # outer - inner constellation point\n",
    "y = y_n * s\n",
    "\n",
    "# Calculate average power of received symbols after normalization\n",
    "avg_power = np.mean(np.abs(y)**2)\n",
    "\n",
    "# Keep in mind there is some noise variance\n",
    "print(\"Avg. power after norm:\", avg_power)\n",
    "\n",
    "# And plot results\n",
    "plt.scatter(y.real, y.imag, label=\"OAI normalized\")\n",
    "plt.title(\"Received QAM symbols (OAI)\")\n",
    "plt.ylabel(\"imaginary part\")\n",
    "plt.xlabel(\"real part\");\n",
    "plt.gca().set_aspect('equal', adjustable='box');\n",
    "\n",
    "# Overlay with Sionna constellations\n",
    "c = sn.phy.mapping.Constellation(\"qam\", 4).points.numpy()\n",
    "plt.scatter(c.real, c.imag, label=\"Sionna QAM-16\")\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As can be seen, after normalization the received data symbols match well to the Sionna QAM constellation.\n",
    "\n",
    "Using the Sionna demapper as reference allows to compare the calculated LLRs with the recorded dataset to verify that also the outputs are correctly scaled.\n",
    "Note that OAI uses a heuristic demapper, i.e., the captured LLRs are not the ones we expect from APP demapping."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "demapper = sn.phy.mapping.Demapper(\"app\", \"qam\", 4)\n",
    "\n",
    "y_tf = tf.constant(y, tf.complex64)\n",
    "# avg_power is signal power ps + no where ps = 1\n",
    "ps = 1. # Signal power\n",
    "no = tf.constant(avg_power-ps, tf.float32)\n",
    "\n",
    "llr = -1* demapper(y_tf, no) # Flip sign due to Sionna's logit definition\n",
    "\n",
    "# Scale llrs\n",
    "llr_ = llr.numpy()\n",
    "\n",
    "llr_ref = np.reshape(llr_.astype(int), (-1,4))\n",
    "\n",
    "llr_oai = data_out[:llr_ref.shape[0],...]\n",
    "\n",
    "# And plot distributions\n",
    "r = np.arange(-100, 100, 1)\n",
    "\n",
    "for bit_idx in range(4):\n",
    "    plt.figure()\n",
    "    plt.hist(llr_ref[:,bit_idx], bins=r, label=\"Sionna APP\")\n",
    "\n",
    "    plt.hist(llr_oai[:,bit_idx], bins=r, alpha=0.3, label=\"OAI demapper\")\n",
    "    plt.legend();\n",
    "    plt.title(f\"LLR distribution bit index {bit_idx}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The observed mismatch can be justified by the fact that OAI uses a heuristic demapper implementation.\n",
    "\n",
    "The noise variance estimation itself is not available and the demapper must rely on the scaled channel magnitudes."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Neural Demapper\n",
    "\n",
    "The neural demapper must be operable with the OAI data structure as analyzed above. Further, we assume a fixed and static constellation, which means the network will learn the Gray labeling implicitly from the training data.\n",
    "\n",
    "For this implementation, we create a simple neural demapper using the *Keras* Model framework. The architecture consists of a basic 3-layer multilayer perceptron (MLP). While this architecture is intentionally kept simple for demonstration purposes, there is room for architectural optimization in real-world applications."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "class NeuralDemapper(Model): # Inherits from Keras Layer\n",
    "\n",
    "    def __init__(self, num_bits_per_symbol,):\n",
    "        \"\"\"Neural demapper using a simple 3-layer MLP\n",
    "\n",
    "        Inputs\n",
    "        ------\n",
    "        [y_i, y_q] or [y_i, y_q, h_i, h_q]\n",
    "            list of tensors:\n",
    "\n",
    "        y_i: [batch_size, 1, 1], tf.float32\n",
    "            Real part of the received IQ symbols.\n",
    "\n",
    "        y_q: [batch_size, 1, 1], tf.float32\n",
    "            Imaginary part of the received IQ symbols.\n",
    "\n",
    "        optional:\n",
    "        h_i: [batch_size, 1, 1], tf.float32\n",
    "            Real part of the estimated channel magnitude.\n",
    "\n",
    "        h_q: [batch_size, 1, 1], tf.float32\n",
    "            Real part of the estimated channel magnitude.\n",
    "\n",
    "        Outputs\n",
    "        -------\n",
    "        llr: [batch_size, num_bits_per_symbol], tf.float32\n",
    "            LLRs for each bit of a symbol.\n",
    "\n",
    "        \"\"\"\n",
    "        super().__init__()\n",
    "\n",
    "        # We are using three layers, this is not optimized but also not needed for this project\n",
    "        self.dense_1 = Dense(32, 'relu', name='dense_1')\n",
    "        self.dense_2 = Dense(32, 'relu', input_shape=(32,), name='dense_2')\n",
    "\n",
    "        # The last layer has no activation and therefore outputs logits, i.e., LLRs\n",
    "        self.dense_3 = Dense(num_bits_per_symbol, None,\n",
    "                             input_shape=(32,), name='dense_3')\n",
    "\n",
    "    def call(self, inputs, training=None):\n",
    "\n",
    "        # Supports either a list of inputs or already concatenated version\n",
    "        nn_input = tf.concat(inputs, axis=-1) if isinstance(inputs, list) else inputs\n",
    "        z = self.dense_1(nn_input, training=training)\n",
    "        z = self.dense_2(z, training=training)\n",
    "        llr = self.dense_3(z, training=training) # [batch size, 1, num_bits_per_symbol]\n",
    "\n",
    "        return llr\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As demapping is a binary classification task of the `modulation order` logits, we use the binary cross entropy (BCE) loss and average over the individual bits."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"neural_demapper\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " dense_1 (Dense)             multiple                  96        \n",
      "                                                                 \n",
      " dense_2 (Dense)             multiple                  1056      \n",
      "                                                                 \n",
      " dense_3 (Dense)             multiple                  132       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 1284 (5.02 KB)\n",
      "Trainable params: 1284 (5.02 KB)\n",
      "Non-trainable params: 0 (0.00 Byte)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "NUM_BITS_PER_SYMBOL = 4 # 16-QAM\n",
    "\n",
    "# Init components\n",
    "neural_demapper_synthetic = NeuralDemapper(NUM_BITS_PER_SYMBOL)\n",
    "\n",
    "# Binary classification problem -> train on BCE loss\n",
    "bce = tf.keras.losses.BinaryCrossentropy(from_logits=True)\n",
    "\n",
    "# Use ADAM optimizer\n",
    "optimizer = tf.keras.optimizers.Adam(1e-2)\n",
    "\n",
    "# Dummy run to init the Keras model\n",
    "neural_demapper_synthetic([tf.ones((1,1)),tf.ones((1,1))])\n",
    "\n",
    "neural_demapper_synthetic.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Blind Demapping & Training with Synthetic Data\n",
    "\n",
    "To simplify the training procedure, we use synthetic training data from Sionna.\n",
    "\n",
    "We draw random payload bits, map them to QAM symbol and simulate the transmission over an AWGN channel.\n",
    "As this synthetic data generation procedure is so fast, we generate new training data in each iteration of the training loop.\n",
    "\n",
    "As noise variance estimates are not available, we train the neural demapper with only two inputs (real and imaginary part of the received symbol, respectively).\n",
    "This obviously does not allow to reproduce exact APP estimates, but intuitively the demapper learns an average noise variance over all possible input SNRs. Keep in mind that the LDPC decoder is implemented as *min-sum* decoder which is know to be robust against mis-scaling of the LLRs.\n",
    "\n",
    "To improve the neural demapper performance, in the next section we introduce another version which is trained on recorded data from the OAI testbed.\n",
    "This version takes as input also the channel estimates.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "I0000 00:00:1743700295.518774 2480569 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:5 out of the last 5 calls to <function _BaseOptimizer._update_step_xla at 0xfffe987304c0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n",
      "WARNING:tensorflow:6 out of the last 6 calls to <function _BaseOptimizer._update_step_xla at 0xfffe987304c0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n",
      "0/10000  Loss: 7.06E-01\n",
      "500/10000  Loss: 4.17E-01\n",
      "1000/10000  Loss: 4.25E-01\n",
      "1500/10000  Loss: 4.32E-01\n",
      "2000/10000  Loss: 4.40E-01\n",
      "2500/10000  Loss: 4.26E-01\n",
      "3000/10000  Loss: 4.36E-01\n",
      "3500/10000  Loss: 4.27E-01\n",
      "4000/10000  Loss: 4.45E-01\n",
      "4500/10000  Loss: 4.29E-01\n",
      "5000/10000  Loss: 4.41E-01\n",
      "5500/10000  Loss: 4.45E-01\n",
      "6000/10000  Loss: 4.24E-01\n",
      "6500/10000  Loss: 4.27E-01\n",
      "7000/10000  Loss: 4.29E-01\n",
      "7500/10000  Loss: 4.17E-01\n",
      "8000/10000  Loss: 4.18E-01\n",
      "8500/10000  Loss: 4.22E-01\n",
      "9000/10000  Loss: 4.26E-01\n",
      "9500/10000  Loss: 4.27E-01\n"
     ]
    }
   ],
   "source": [
    "BATCH_SIZE = 1024\n",
    "NUM_TRAINING_ITERATIONS = 10000\n",
    "\n",
    "# Scaling factor for QAM symbols to be compatible with the OAI demapper\n",
    "qam16_threshold_mag = 2 * 0.3162278\n",
    "\n",
    "@tf.function(jit_compile=False)\n",
    "def training_step():\n",
    "    # we train with a randomized noise variance\n",
    "    no = tf.random.uniform([BATCH_SIZE,1], minval=0., maxval=1.,\n",
    "                           dtype=tf.float32)\n",
    "    # Draw random bits\n",
    "    bits = binary_source([BATCH_SIZE, NUM_BITS_PER_SYMBOL])\n",
    "\n",
    "    # Map to QAM symbols\n",
    "    x = mapper(bits)\n",
    "\n",
    "    # Transmit over Gaussian channel\n",
    "    y = awgn_channel(x, no)\n",
    "\n",
    "    # Split real and imaginary part and scale back to OAI\n",
    "    qxr = tf.math.real(y) * (1.0 / qam16_threshold_mag)\n",
    "    qxi = tf.math.imag(y) * (1.0 / qam16_threshold_mag)\n",
    "\n",
    "    llr = neural_demapper_synthetic([qxr, qxi], training=True)\n",
    "    loss = bce(bits, -llr) # Note: OAI uses flipped logits definition\n",
    "    return loss\n",
    "\n",
    "# Training loop\n",
    "for i in range(NUM_TRAINING_ITERATIONS):\n",
    "    with tf.GradientTape() as tape:\n",
    "        loss = training_step()\n",
    "    gradient = tape.gradient(loss, tape.watched_variables())\n",
    "    optimizer.apply_gradients(zip(gradient, tape.watched_variables()));\n",
    "    # Print progress\n",
    "    if i % 500 == 0:\n",
    "        print(f\"{i}/{NUM_TRAINING_ITERATIONS}  Loss: {loss:.2E}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's have a look at the outputs after training."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original bits: [[0 1 1 1]]\n",
      "Complex-valued symbol: [[0.94868326-0.94868326j]]\n",
      "Received noisy symbol:  [[0.9949063-0.77518046j]]\n",
      "tf.Tensor([[0.9949063-0.77518046j]], shape=(1, 1), dtype=complex64)\n",
      "LLRs Reference: tf.Tensor([[-4.562538    3.3838053   1.1041325   0.36931008]], shape=(1, 4), dtype=float32)\n",
      "LLRs NRX : tf.Tensor([[-3.5805306   2.8586419   1.3626295   0.46617085]], shape=(1, 4), dtype=float32)\n"
     ]
    }
   ],
   "source": [
    "bits = np.array([[0,1,1,1]])\n",
    "print(\"Original bits:\", bits)\n",
    "x = mapper(bits)\n",
    "print(\"Complex-valued symbol:\", x.numpy())\n",
    "# Add some noise\n",
    "no = tf.constant([[0.4,]]) # Noise variance\n",
    "y = awgn_channel(x, no)\n",
    "print(\"Received noisy symbol: \", y.numpy())\n",
    "print(y)\n",
    "llr_ref = demapper(y, no)\n",
    "llr_nn = -neural_demapper_synthetic([tf.math.real(y) / qam16_threshold_mag,\n",
    "                                     tf.math.imag(y) / qam16_threshold_mag])\n",
    "print(\"LLRs Reference:\", llr_ref)\n",
    "print(\"LLRs NRX :\", llr_nn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As can be seen, the outputs of the neural demapper are close to the (optimal) Sionna reference APP-demapper. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Save weights for synthetic demapper\n",
    "fn = \"model/neural_demapper_weights_y2\"\n",
    "\n",
    "weights = neural_demapper_synthetic.get_weights()\n",
    "with open(fn, 'wb') as f:\n",
    "    pickle.dump(weights, f)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Improved Demapping & Training with Captured Data\n",
    "\n",
    "To improve the performance of the neural demapper, we now also take OAI's channel estimates into account. Thus, the demapper has two complex-valued inputs (i.e., 4 real-valued), the received symbol and the channel estimate. Both are scaled integers as described earlier. Note that the scaled channel estimates of OAI that are provided to the demapper share the same real and imaginary component. Thus, 3 inputs would be sufficient, but we keep the same data structure and feed 4 inputs to the neural demapper.\n",
    "\n",
    "The following code snippets can be used to train with recorded data from the [previous tutorial](../data_acquisition/index.rst).\n",
    "\n",
    "In case of real-world data, we can use the mean squared error (MSE) loss and interpret the task as a regression problem. In this case, the labels are the outputs of the OAI demapper. Note that this includes erroneous decisions in the training data. A better approach is to use the corrected labels either by transmitting a known sequence or by using the LDPC decoder for error correction [Schibisch2018]. However, this is beyond the scope of this tutorial."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training data size:  856554\n"
     ]
    }
   ],
   "source": [
    "###########################################################################\n",
    "# The following code is only relevant if training is done on captured data!\n",
    "###########################################################################\n",
    "\n",
    "# Depends on config that was used for data capture\n",
    "fn_input = '../../logs/demapper_in.txt'\n",
    "fn_output = '../../logs/demapper_out.txt'\n",
    "\n",
    "# Requires data dump from the previous tutorial\n",
    "demapper_in_data = read_training_data(fn_input, (2, 2))\n",
    "demapper_out_data = read_training_data(fn_output, (4,))\n",
    "assert(demapper_in_data.shape[0] == demapper_out_data.shape[0])\n",
    "\n",
    "print(\"Training data size: \", demapper_out_data.shape[0])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"neural_demapper_1\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " dense_1 (Dense)             multiple                  160       \n",
      "                                                                 \n",
      " dense_2 (Dense)             multiple                  1056      \n",
      "                                                                 \n",
      " dense_3 (Dense)             multiple                  132       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 1348 (5.27 KB)\n",
      "Trainable params: 1348 (5.27 KB)\n",
      "Non-trainable params: 0 (0.00 Byte)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "# Regression loss for training on captured data\n",
    "rge = tf.keras.losses.MeanSquaredError()\n",
    "\n",
    "# Use ADAM optimizer\n",
    "optimizer = tf.keras.optimizers.Adam(1e-2)\n",
    "\n",
    "# Init new receiver\n",
    "neural_demapper_capture = NeuralDemapper(NUM_BITS_PER_SYMBOL)\n",
    "\n",
    "# Dummy run to init the Keras model\n",
    "# Note that we now have 4 inputs as we do not scale automatically\n",
    "neural_demapper_capture([tf.ones((1,4))])\n",
    "\n",
    "neural_demapper_capture.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0/10000  Loss: 1.42E-01\n",
      "500/10000  Loss: 1.50E-05\n",
      "1000/10000  Loss: 7.88E-06\n",
      "1500/10000  Loss: 5.17E-05\n",
      "2000/10000  Loss: 1.25E-05\n",
      "2500/10000  Loss: 2.97E-06\n",
      "3000/10000  Loss: 1.49E-06\n",
      "3500/10000  Loss: 1.22E-05\n",
      "4000/10000  Loss: 7.39E-05\n",
      "4500/10000  Loss: 1.31E-06\n",
      "5000/10000  Loss: 1.01E-06\n",
      "5500/10000  Loss: 1.81E-05\n",
      "6000/10000  Loss: 6.59E-07\n",
      "6500/10000  Loss: 6.77E-05\n",
      "7000/10000  Loss: 4.81E-06\n",
      "7500/10000  Loss: 1.07E-04\n",
      "8000/10000  Loss: 3.10E-06\n",
      "8500/10000  Loss: 1.40E-05\n",
      "9000/10000  Loss: 4.12E-05\n",
      "9500/10000  Loss: 7.80E-06\n"
     ]
    }
   ],
   "source": [
    "@tf.function(jit_compile=False)\n",
    "def training_step():\n",
    "    # Train on captured data\n",
    "    if True:\n",
    "        i = np.random.randint(0, demapper_in_data.shape[0] - BATCH_SIZE)\n",
    "        llr_ref = demapper_out_data[i:i+BATCH_SIZE]\n",
    "        y_no = demapper_in_data[i:i+BATCH_SIZE]\n",
    "\n",
    "        llr_ref = int16_to_float16(llr_ref)\n",
    "        y_no = int16_to_float16(y_no)\n",
    "\n",
    "        llr = neural_demapper_capture(y_no.reshape(-1, 4), training=True)\n",
    "        loss = rge(llr_ref, llr)\n",
    "        return loss\n",
    "\n",
    "# Training loop\n",
    "for i in range(NUM_TRAINING_ITERATIONS):\n",
    "    with tf.GradientTape() as tape:\n",
    "        loss = training_step()\n",
    "    gradient = tape.gradient(loss, tape.watched_variables())\n",
    "    optimizer.apply_gradients(zip(gradient, tape.watched_variables()));\n",
    "    # Print progress\n",
    "    if i % 500 == 0:\n",
    "        print(f\"{i}/{NUM_TRAINING_ITERATIONS}  Loss: {loss:.2E}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Save weights of captured demapper\n",
    "fn = \"model/neural_demapper_weights_y4\"\n",
    "\n",
    "weights = neural_demapper_capture.get_weights()\n",
    "with open(fn, 'wb') as f:\n",
    "    pickle.dump(weights, f)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that this implementation of the demapper has four inputs instead of the two normalized inputs from the synthetic demapper.\n",
    "However, due to the lack of ground truth information, the training data is only as good as the OAI heuristic demapper.\n",
    "\n",
    "One could use the LDPC decoder to reconstruct improved labels as done in [Schibisch2018]. However, this is beyond the scope of this tutorial."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Export TensorRT Engine\n",
    "\n",
    "We can now export the model including its weights such that it can be loaded in [TensorRT](https://developer.nvidia.com/tensorrt).\n",
    "\n",
    "TensorRT is a toolset to achieve high-performance deep learning inference. As input it requires the [ONNX](https://onnx.ai/) export of a trained model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "synthetic = True\n",
    "\n",
    "if synthetic:\n",
    "    num_inputs = 2  # 2xfloat16\n",
    "else:\n",
    "    num_inputs = 4  # 4xfloat16\n",
    "\n",
    "fn = f\"model/neural_demapper_weights_y{num_inputs}\"\n",
    "\n",
    "# Load weights via pickle\n",
    "with open(fn, 'rb') as f:\n",
    "    weights = pickle.load(f)\n",
    "neural_demapper = NeuralDemapper(NUM_BITS_PER_SYMBOL)\n",
    "\n",
    "# Dummy run to init layers\n",
    "neural_demapper([tf.ones((1,num_inputs))])\n",
    "\n",
    "# And load weights\n",
    "neural_demapper.set_weights(weights)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We now convert the model to the ONNX file format and build the TensorRT engine.\n",
    "\n",
    "Note that you may need to fix the `trtexec` path (requires restart the Jupyter notebook) via `export PATH=$PATH:/usr/src/tensorrt/bin`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "bs_max = 512 # max batch size for inference\n",
    "\n",
    "# We use dynamic shapes for the batch_dim\n",
    "input_signature =[tf.TensorSpec([None,num_inputs], tf.float16, name=\"y\")]\n",
    "\n",
    "\n",
    "onnx_model, _ = tf2onnx.convert.from_keras(\n",
    "    neural_demapper,\n",
    "    input_signature=input_signature\n",
    ")\n",
    "onnx.checker.check_model(onnx_model)\n",
    "\n",
    "# And save the ONNX model\n",
    "onnx.save(onnx_model, f\"model/neural_demapper.{num_inputs}xfloat16.onnx\")\n",
    "\n",
    "# And build trtengine\n",
    "trt_command = f'/usr/src/tensorrt/bin/trtexec --fp16'\n",
    "trt_command += f' --onnx=model/neural_demapper.{num_inputs}xfloat16.onnx'\n",
    "trt_command += f' --saveEngine=model/neural_demapper.{num_inputs}xfloat16.plan'\n",
    "trt_command += f' --preview=+profileSharing0806'\n",
    "trt_command += f' --inputIOFormats=fp16:chw'\n",
    "trt_command += f' --outputIOFormats=fp16:chw'\n",
    "\n",
    "trt_command += f\" --minShapes=y:1x{num_inputs}\"\n",
    "trt_command += f\" --optShapes=y:{64}x{num_inputs}\"\n",
    "trt_command += f\" --maxShapes=y:{bs_max}x{num_inputs}\"\n",
    "\n",
    "# And run the command\n",
    "os.system(trt_command)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The TensorRT engine is now exported and can be used by the neural demapper plugin.\n",
    "The next part of this tutorial will explain the CUDA integration of the engine."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
