Antennas
********

We refer the user to the section ":ref:`far_field`" for various useful definitions and background on antenna modeling.
An :class:`~sionna.rt.Antenna` can be single- or dual-polarized and has for each polarization direction a possibly different antenna pattern.

An antenna pattern is defined as a function :math:`f:(\theta,\varphi)\mapsto (C_\theta(\theta, \varphi), C_\varphi(\theta, \varphi))`
that maps a pair of zenith and azimuth angles to zenith and azimuth pattern values.
You can easily define your own pattern or use one of the predefined :ref:`patterns <patterns>` below.

Transmitters (:class:`~sionna.rt.Transmitter`) and receivers (:class:`~sionna.rt.Receiver`) are not equipped with an :class:`~sionna.rt.Antenna` but an :class:`~sionna.rt.AntennaArray` that is composed of one or more antennas. All transmitters in a scene share the same :class:`~sionna.rt.AntennaArray` which can be set through the scene property :attr:`~sionna.rt.Scene.tx_array`. The same holds for all receivers whose :class:`~sionna.rt.AntennaArray` can be set through :attr:`~sionna.rt.Scene.rx_array`.

Antenna
-------
.. autoclass:: sionna.rt.Antenna
   :members:
   :exclude-members: pattern_with_slant_angle

compute_gain
------------
.. autofunction:: sionna.rt.antenna.compute_gain

visualize
---------
.. autofunction:: sionna.rt.antenna.visualize

.. _patterns:

dipole_pattern
--------------
.. autofunction:: sionna.rt.antenna.dipole_pattern

hw_dipole_pattern
-----------------
.. autofunction:: sionna.rt.antenna.hw_dipole_pattern

iso_pattern
------------
.. autofunction:: sionna.rt.antenna.iso_pattern

tr38901_pattern
---------------
.. autofunction:: sionna.rt.antenna.tr38901_pattern

